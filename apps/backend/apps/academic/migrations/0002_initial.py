# Generated by Django 5.2.5 on 2025-08-28 12:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0001_initial'),
        ('curriculum', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='canonicalrequirement',
            name='effective_term',
            field=models.ForeignKey(help_text='Term when this canonical requirement becomes effective', on_delete=django.db.models.deletion.PROTECT, related_name='canonical_requirements_starting', to='curriculum.term', verbose_name='Effective Term'),
        ),
        migrations.AddField(
            model_name='canonicalrequirement',
            name='end_term',
            field=models.ForeignKey(blank=True, help_text='Term when this requirement is no longer effective (optional)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='canonical_requirements_ending', to='curriculum.term', verbose_name='End Term'),
        ),
        migrations.AddField(
            model_name='canonicalrequirement',
            name='major',
            field=models.ForeignKey(help_text='The major program this canonical requirement applies to', on_delete=django.db.models.deletion.PROTECT, related_name='canonical_requirements', to='curriculum.major', verbose_name='Major'),
        ),
        migrations.AddField(
            model_name='canonicalrequirement',
            name='required_course',
            field=models.ForeignKey(help_text='The exact course required at this sequence position', on_delete=django.db.models.deletion.PROTECT, related_name='canonical_requirements', to='curriculum.course', verbose_name='Required Course'),
        ),
        migrations.AddField(
            model_name='courseequivalency',
            name='approved_by',
            field=models.ForeignKey(help_text='User who approved this equivalency', on_delete=django.db.models.deletion.PROTECT, related_name='approved_equivalencies', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='courseequivalency',
            name='effective_term',
            field=models.ForeignKey(help_text='Term when this equivalency becomes effective', on_delete=django.db.models.deletion.PROTECT, related_name='effective_equivalencies', to='curriculum.term', verbose_name='Effective Term'),
        ),
        migrations.AddField(
            model_name='courseequivalency',
            name='end_term',
            field=models.ForeignKey(blank=True, help_text='Term when this equivalency is no longer effective', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ended_equivalencies', to='curriculum.term', verbose_name='End Term'),
        ),
        migrations.AddField(
            model_name='courseequivalency',
            name='equivalent_course',
            field=models.ForeignKey(help_text='The course that can be used as equivalent', on_delete=django.db.models.deletion.CASCADE, related_name='reverse_equivalency_mappings', to='curriculum.course', verbose_name='Equivalent Course'),
        ),
        migrations.AddField(
            model_name='courseequivalency',
            name='original_course',
            field=models.ForeignKey(help_text='The course that needs an equivalent', on_delete=django.db.models.deletion.CASCADE, related_name='equivalency_mappings', to='curriculum.course', verbose_name='Original Course'),
        ),
        migrations.AddField(
            model_name='studentcourseoverride',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_course_overrides', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='studentcourseoverride',
            name='effective_term',
            field=models.ForeignKey(help_text='Term when this override becomes effective', on_delete=django.db.models.deletion.PROTECT, related_name='effective_overrides', to='curriculum.term', verbose_name='Effective Term'),
        ),
        migrations.AddField(
            model_name='studentcourseoverride',
            name='expiration_term',
            field=models.ForeignKey(blank=True, help_text='Term when this override expires', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='expiring_overrides', to='curriculum.term', verbose_name='Expiration Term'),
        ),
        migrations.AddField(
            model_name='studentcourseoverride',
            name='original_course',
            field=models.ForeignKey(help_text='The course that should be replaced', on_delete=django.db.models.deletion.PROTECT, related_name='overridden_by_students', to='curriculum.course', verbose_name='Original Course'),
        ),
        migrations.AddField(
            model_name='studentcourseoverride',
            name='requested_by',
            field=models.ForeignKey(help_text='User who requested this override', on_delete=django.db.models.deletion.PROTECT, related_name='requested_overrides', to=settings.AUTH_USER_MODEL, verbose_name='Requested By'),
        ),
    ]
