# Generated by Django 5.2.5 on 2025-08-28 12:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0002_initial'),
        ('curriculum', '0002_initial'),
        ('enrollment', '0002_initial'),
        ('people', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='studentcourseoverride',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_overrides', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='studentcourseoverride',
            name='substitute_course',
            field=models.ForeignKey(help_text='The course to use as a substitute', on_delete=django.db.models.deletion.PROTECT, related_name='substitutes_for_students', to='curriculum.course', verbose_name='Substitute Course'),
        ),
        migrations.AddField(
            model_name='studentdegreeprogress',
            name='canonical_requirement',
            field=models.ForeignKey(help_text='The specific requirement being fulfilled', on_delete=django.db.models.deletion.PROTECT, related_name='student_fulfillments', to='academic.canonicalrequirement', verbose_name='Canonical Requirement'),
        ),
        migrations.AddField(
            model_name='studentdegreeprogress',
            name='fulfilling_enrollment',
            field=models.ForeignKey(blank=True, help_text='Class enrollment that fulfilled this requirement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requirement_fulfillments', to='enrollment.classheaderenrollment', verbose_name='Fulfilling Enrollment'),
        ),
        migrations.AddField(
            model_name='studentdegreeprogress',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_fulfillments', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_requirement_exceptions', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='canonical_requirement',
            field=models.ForeignKey(help_text='The canonical requirement being modified', on_delete=django.db.models.deletion.CASCADE, related_name='student_exceptions', to='academic.canonicalrequirement', verbose_name='Canonical Requirement'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='effective_term',
            field=models.ForeignKey(help_text='Term when this exception becomes effective', on_delete=django.db.models.deletion.PROTECT, related_name='exceptions_starting', to='curriculum.term', verbose_name='Effective Term'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='expiration_term',
            field=models.ForeignKey(blank=True, help_text='Term when this exception expires (optional)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exceptions_expiring', to='curriculum.term', verbose_name='Expiration Term'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='fulfilling_course',
            field=models.ForeignKey(blank=True, help_text='Internal course that fulfills this requirement', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fulfills_via_exception', to='curriculum.course', verbose_name='Fulfilling Course'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='requested_by',
            field=models.ForeignKey(help_text='Person who submitted the exception request', on_delete=django.db.models.deletion.PROTECT, related_name='requested_requirement_exceptions', to=settings.AUTH_USER_MODEL, verbose_name='Requested By'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_exceptions', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='studentdegreeprogress',
            name='fulfilling_exception',
            field=models.ForeignKey(blank=True, help_text='Exception that allowed fulfillment of this requirement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requirement_fulfillments', to='academic.studentrequirementexception', verbose_name='Fulfilling Exception'),
        ),
        migrations.AddField(
            model_name='transfercredit',
            name='equivalent_course',
            field=models.ForeignKey(blank=True, help_text='Internal course this transfer credit maps to', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfer_equivalents', to='curriculum.course', verbose_name='Equivalent Course'),
        ),
        migrations.AddField(
            model_name='transfercredit',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reviewed_transfer_credits', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By'),
        ),
        migrations.AddField(
            model_name='transfercredit',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_credits', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='studentrequirementexception',
            name='fulfilling_transfer_credit',
            field=models.ForeignKey(blank=True, help_text='Transfer credit that fulfills this requirement', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='canonical_requirement_exceptions', to='academic.transfercredit', verbose_name='Fulfilling Transfer Credit'),
        ),
        migrations.AddField(
            model_name='studentdegreeprogress',
            name='fulfilling_transfer',
            field=models.ForeignKey(blank=True, help_text='Transfer credit that fulfilled this requirement', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requirement_fulfillments', to='academic.transfercredit', verbose_name='Fulfilling Transfer Credit'),
        ),
        migrations.AddIndex(
            model_name='canonicalrequirement',
            index=models.Index(fields=['major', 'sequence_number'], name='academic_ca_major_i_bb961f_idx'),
        ),
        migrations.AddIndex(
            model_name='canonicalrequirement',
            index=models.Index(fields=['major', 'is_active'], name='academic_ca_major_i_dc89d2_idx'),
        ),
        migrations.AddIndex(
            model_name='canonicalrequirement',
            index=models.Index(fields=['effective_term', 'end_term'], name='academic_ca_effecti_15e96f_idx'),
        ),
        migrations.AddIndex(
            model_name='canonicalrequirement',
            index=models.Index(fields=['required_course'], name='academic_ca_require_22f800_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='canonicalrequirement',
            unique_together={('major', 'required_course', 'effective_term'), ('major', 'sequence_number', 'effective_term')},
        ),
        migrations.AddIndex(
            model_name='courseequivalency',
            index=models.Index(fields=['original_course', 'effective_term'], name='academic_co_origina_0bdd16_idx'),
        ),
        migrations.AddIndex(
            model_name='courseequivalency',
            index=models.Index(fields=['equivalent_course', 'effective_term'], name='academic_co_equival_ce8caf_idx'),
        ),
        migrations.AddIndex(
            model_name='courseequivalency',
            index=models.Index(fields=['is_active'], name='academic_co_is_acti_153977_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='courseequivalency',
            unique_together={('original_course', 'equivalent_course', 'effective_term')},
        ),
        migrations.AddIndex(
            model_name='studentcourseoverride',
            index=models.Index(fields=['student', 'approval_status'], name='academic_st_student_2758a2_idx'),
        ),
        migrations.AddIndex(
            model_name='studentcourseoverride',
            index=models.Index(fields=['original_course', 'substitute_course'], name='academic_st_origina_165b51_idx'),
        ),
        migrations.AddIndex(
            model_name='studentcourseoverride',
            index=models.Index(fields=['approval_status', 'effective_term'], name='academic_st_approva_8740ba_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentcourseoverride',
            unique_together={('student', 'original_course', 'substitute_course', 'effective_term')},
        ),
        migrations.AddIndex(
            model_name='transfercredit',
            index=models.Index(fields=['student', 'approval_status'], name='academic_tr_student_c752e6_idx'),
        ),
        migrations.AddIndex(
            model_name='transfercredit',
            index=models.Index(fields=['equivalent_course'], name='academic_tr_equival_19204e_idx'),
        ),
        migrations.AddIndex(
            model_name='transfercredit',
            index=models.Index(fields=['approval_status', 'review_date'], name='academic_tr_approva_1e612d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='transfercredit',
            unique_together={('student', 'external_institution', 'external_course_code')},
        ),
        migrations.AddIndex(
            model_name='studentrequirementexception',
            index=models.Index(fields=['student', 'approval_status'], name='academic_st_student_eac7c4_idx'),
        ),
        migrations.AddIndex(
            model_name='studentrequirementexception',
            index=models.Index(fields=['canonical_requirement', 'approval_status'], name='academic_st_canonic_53fe41_idx'),
        ),
        migrations.AddIndex(
            model_name='studentrequirementexception',
            index=models.Index(fields=['approval_status', 'effective_term'], name='academic_st_approva_33c3a5_idx'),
        ),
        migrations.AddIndex(
            model_name='studentrequirementexception',
            index=models.Index(fields=['exception_type', 'approval_status'], name='academic_st_excepti_b41650_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentrequirementexception',
            unique_together={('student', 'canonical_requirement', 'effective_term')},
        ),
        migrations.AddIndex(
            model_name='studentdegreeprogress',
            index=models.Index(fields=['student', 'is_active'], name='academic_st_student_ad1d66_idx'),
        ),
        migrations.AddIndex(
            model_name='studentdegreeprogress',
            index=models.Index(fields=['canonical_requirement', 'is_active'], name='academic_st_canonic_8a2fb1_idx'),
        ),
        migrations.AddIndex(
            model_name='studentdegreeprogress',
            index=models.Index(fields=['fulfillment_method'], name='academic_st_fulfill_e1338c_idx'),
        ),
        migrations.AddIndex(
            model_name='studentdegreeprogress',
            index=models.Index(fields=['fulfillment_date'], name='academic_st_fulfill_936c77_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentdegreeprogress',
            unique_together={('student', 'canonical_requirement')},
        ),
    ]
