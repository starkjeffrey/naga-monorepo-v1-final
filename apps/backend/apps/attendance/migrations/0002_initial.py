# Generated by Django 5.2.5 on 2025-08-28 12:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('attendance', '0001_initial'),
        ('curriculum', '0001_initial'),
        ('people', '0001_initial'),
        ('scheduling', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='attendancearchive',
            name='class_part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_archives', to='scheduling.classpart', verbose_name='Class Part'),
        ),
        migrations.AddField(
            model_name='attendancearchive',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_archives', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='attendancearchive',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_archives', to='curriculum.term', verbose_name='Term'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='permission_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Permission Approved By'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='recorded_by',
            field=models.ForeignKey(blank=True, help_text='User who recorded this attendance', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='recorded_attendance', to=settings.AUTH_USER_MODEL, verbose_name='Recorded By'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_records', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='attendancesession',
            name='class_part',
            field=models.ForeignKey(help_text='Which class component this attendance is for', on_delete=django.db.models.deletion.CASCADE, related_name='attendance_sessions', to='scheduling.classpart', verbose_name='Class Part'),
        ),
        migrations.AddField(
            model_name='attendancesession',
            name='substitute_assigned_by',
            field=models.ForeignKey(blank=True, help_text='User who assigned the substitute teacher', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assigned_substitute_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Substitute Assigned By'),
        ),
        migrations.AddField(
            model_name='attendancesession',
            name='substitute_teacher',
            field=models.ForeignKey(blank=True, help_text='Teacher actually conducting this session (if different from scheduled)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='substitute_sessions', to='people.teacherprofile', verbose_name='Substitute Teacher'),
        ),
        migrations.AddField(
            model_name='attendancesession',
            name='teacher',
            field=models.ForeignKey(help_text='Originally scheduled teacher for this session', on_delete=django.db.models.deletion.PROTECT, related_name='attendance_sessions', to='people.teacherprofile', verbose_name='Scheduled Teacher'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='attendance_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='attendance.attendancesession', verbose_name='Attendance Session'),
        ),
        migrations.AddField(
            model_name='attendancesettings',
            name='program',
            field=models.ForeignKey(help_text='Academic program this setting applies to', on_delete=django.db.models.deletion.PROTECT, related_name='attendance_settings', to='curriculum.division', verbose_name='Program Division'),
        ),
        migrations.AddField(
            model_name='permissionrequest',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_permission_requests', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='permissionrequest',
            name='class_part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_requests', to='scheduling.classpart', verbose_name='Class Part'),
        ),
        migrations.AddField(
            model_name='permissionrequest',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='permission_requests', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='rostersync',
            name='class_part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster_syncs', to='scheduling.classpart', verbose_name='Class Part'),
        ),
        migrations.AddIndex(
            model_name='attendancearchive',
            index=models.Index(fields=['student', 'term'], name='attendance__student_a2f667_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancearchive',
            index=models.Index(fields=['class_part', 'term'], name='attendance__class_p_d8c189_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancearchive',
            index=models.Index(fields=['attendance_percentage'], name='attendance__attenda_5bf89c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancearchive',
            unique_together={('class_part', 'student', 'term')},
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['class_part', 'session_date'], name='attendance__class_p_ecc953_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['teacher', 'session_date'], name='attendance__teacher_d7ed71_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['substitute_teacher', 'session_date'], name='attendance__substit_d03e21_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['session_date', 'is_active'], name='attendance__session_375493_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['attendance_code', 'is_active'], name='attendance__attenda_b9660e_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['is_substitute_session', 'session_date'], name='attendance__is_subs_53ac4e_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['attendance_session', 'status'], name='attendance__attenda_e2c407_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['student', 'attendance_session'], name='attendance__student_b686d4_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['status', 'attendance_session'], name='attendance__status_7f4af9_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['data_source'], name='attendance__data_so_2b6a37_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancerecord',
            unique_together={('attendance_session', 'student')},
        ),
        migrations.AddIndex(
            model_name='attendancesettings',
            index=models.Index(fields=['program'], name='attendance__program_5a43c8_idx'),
        ),
        migrations.AddIndex(
            model_name='permissionrequest',
            index=models.Index(fields=['student', 'session_date'], name='attendance__student_5b49d6_idx'),
        ),
        migrations.AddIndex(
            model_name='permissionrequest',
            index=models.Index(fields=['class_part', 'session_date'], name='attendance__class_p_7f904b_idx'),
        ),
        migrations.AddIndex(
            model_name='permissionrequest',
            index=models.Index(fields=['request_status', 'session_date'], name='attendance__request_f33c70_idx'),
        ),
        migrations.AddIndex(
            model_name='permissionrequest',
            index=models.Index(fields=['program_type', 'request_status'], name='attendance__program_938ba4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='permissionrequest',
            unique_together={('student', 'class_part', 'session_date')},
        ),
        migrations.AddIndex(
            model_name='rostersync',
            index=models.Index(fields=['class_part', 'sync_date'], name='attendance__class_p_c0e286_idx'),
        ),
        migrations.AddIndex(
            model_name='rostersync',
            index=models.Index(fields=['sync_date', 'sync_type'], name='attendance__sync_da_ea23a2_idx'),
        ),
        migrations.AddIndex(
            model_name='rostersync',
            index=models.Index(fields=['is_successful', 'sync_timestamp'], name='attendance__is_succ_7c0ac2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rostersync',
            unique_together={('class_part', 'sync_date', 'sync_type')},
        ),
    ]
