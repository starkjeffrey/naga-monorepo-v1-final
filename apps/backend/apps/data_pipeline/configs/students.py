"""
Students Table Configuration

Configuration for processing the Students table - the most complex table with 91 columns
including personal data, academic history, and Khmer text fields requiring special encoding handling.
This table has known encoding issues with KName and KName2 fields containing Khmer characters.
"""

from ..configs.base import ColumnMapping, TableConfig
from ..validators.students import StudentValidator

STUDENTS_CONFIG = TableConfig(
    table_name="students",
    source_file_pattern="students.csv",
    description="Student records with personal data, academic history, and program information",
    # Table naming follows convention
    raw_table_name="raw_students",
    cleaned_table_name="cleaned_students",
    validated_table_name="validated_students",
    column_mappings=[
        # Primary identifier
        ColumnMapping(
            source_name="ID",
            target_name="student_id",
            data_type="nvarchar(10)",
            nullable=False,
            cleaning_rules=["trim", "uppercase"],
            validation_priority=1,  # Critical primary key
            description="Student ID - primary key",
            examples=["ST001", "ST002", "MS2010001"],
        ),
        # Authentication fields
        ColumnMapping(
            source_name="UI",
            target_name="email",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim"],
            description="User interface login name",
            examples=["student001", "user123"],
        ),
        ColumnMapping(
            source_name="PW",
            target_name="password_hash",
            data_type="nvarchar(10)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Legacy password (historical, not used in new system)",
        ),
        # Personal information - names with encoding issues
        ColumnMapping(
            source_name="Name",
            target_name="name_english",
            data_type="nvarchar(100)",
            nullable=False,
            cleaning_rules=["trim", "fix_encoding", "parse_student_name"],
            validation_priority=1,  # Critical field
            description="Student name in English (cleaned from legacy format with embedded status indicators)",
            examples=["John Doe", "Mary Smith", "$$John Smith<ABC Foundation>", "Jane Doe{AF}$$"],
        ),
        ColumnMapping(
            source_name="KName",
            target_name="name_khmer",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_khmer_encoding"],
            validation_priority=2,  # Important for Cambodian students
            description="Student name in Khmer script - KNOWN ENCODING ISSUES",
            examples=["ជុន ដូ", "ម៉ារី ស្មិត"],
        ),
        ColumnMapping(
            source_name="KName2",
            target_name="name_khmer_alt",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_khmer_encoding"],
            description="Alternative Khmer name - KNOWN ENCODING ISSUES",
        ),
        # Demographic information
        ColumnMapping(
            source_name="BirthDate",
            target_name="birth_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "normalize_birth_date"],
            validation_priority=2,
            description="Date of birth with age validation",
            examples=["Jan 15 1990 12:00AM", "Dec 3 1985 12:00AM"],
        ),
        ColumnMapping(
            source_name="BirthPlace",
            target_name="birth_place",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Place of birth",
        ),
        ColumnMapping(
            source_name="Gender",
            target_name="gender",
            data_type="nvarchar(30)",
            nullable=True,
            cleaning_rules=["trim", "normalize_gender"],
            validation_priority=2,
            description="Gender",
            examples=["Male", "Female", "M", "F"],
        ),
        ColumnMapping(
            source_name="MaritalStatus",
            target_name="marital_status",
            data_type="nvarchar(30)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Marital status",
        ),
        ColumnMapping(
            source_name="Nationality",
            target_name="nationality",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Nationality",
        ),
        # Contact information
        ColumnMapping(
            source_name="HomeAddress",
            target_name="home_address",
            data_type="nvarchar(250)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Home address",
        ),
        ColumnMapping(
            source_name="HomePhone",
            target_name="home_phone",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "normalize_phone"],
            description="Home phone number",
        ),
        ColumnMapping(
            source_name="Email",
            target_name="email_personal",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "lowercase", "validate_email"],
            validation_priority=2,
            description="Personal email address",
        ),
        ColumnMapping(
            source_name="MobilePhone",
            target_name="mobile_phone",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "normalize_phone"],
            description="Mobile phone number",
        ),
        ColumnMapping(
            source_name="SchoolEmail",
            target_name="email_school",
            data_type="varchar(100)",
            nullable=True,
            cleaning_rules=["trim", "lowercase", "validate_email"],
            description="School-issued email address",
        ),
        # Employment information
        ColumnMapping(
            source_name="EmploymentPlace",
            target_name="employment_place",
            data_type="nvarchar(200)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Current workplace",
        ),
        ColumnMapping(
            source_name="Position",
            target_name="employment_position",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Job position",
        ),
        # Family information
        ColumnMapping(
            source_name="FatherName",
            target_name="father_name",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Father's name",
        ),
        ColumnMapping(
            source_name="SpouseName",
            target_name="spouse_name",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Spouse's name",
        ),
        # Emergency contact
        ColumnMapping(
            source_name="Emg_ContactPerson",
            target_name="emergency_contact_name",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding", "parse_emergency_contact"],
            description="Emergency contact person name (normalized)",
        ),
        ColumnMapping(
            source_name="Relationship",
            target_name="emergency_contact_relationship",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "parse_emergency_contact"],
            description="Relationship to emergency contact (standardized)",
        ),
        ColumnMapping(
            source_name="ContactPersonAddress",
            target_name="emergency_contact_address",
            data_type="nvarchar(250)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Emergency contact address",
        ),
        ColumnMapping(
            source_name="ContactPersonPhone",
            target_name="emergency_contact_phone",
            data_type="nvarchar(30)",
            nullable=True,
            cleaning_rules=["trim", "normalize_phone"],
            description="Emergency contact phone",
        ),
        # High school education
        ColumnMapping(
            source_name="HighSchoolProgram_School",
            target_name="high_school_name",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="High school name",
        ),
        ColumnMapping(
            source_name="HighSchoolProgram_Province",
            target_name="high_school_province",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="High school province",
        ),
        ColumnMapping(
            source_name="HighSchoolProgram_Year",
            target_name="high_school_year",
            data_type="int",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="High school graduation year",
        ),
        ColumnMapping(
            source_name="HighSchoolProgram_Diploma",
            target_name="high_school_diploma",
            data_type="char(10)",
            nullable=True,
            cleaning_rules=["trim"],
            description="High school diploma type",
        ),
        # English program
        ColumnMapping(
            source_name="EnglishProgram_School",
            target_name="english_program_school",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="English language program school",
        ),
        ColumnMapping(
            source_name="EnglishProgram_Level",
            target_name="english_program_level",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="English proficiency level achieved",
        ),
        ColumnMapping(
            source_name="EnglishProgram_Year",
            target_name="english_program_year",
            data_type="int",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="Year English program completed",
        ),
        # Less than 4-year program
        ColumnMapping(
            source_name="LessThanFourYearProgram_School",
            target_name="certificate_program_school",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Certificate/diploma program school",
        ),
        ColumnMapping(
            source_name="LessThanFourYearProgram_Year",
            target_name="certificate_program_year",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim", "parse_int"],
            description="Certificate program completion year",
        ),
        # Bachelor's degree
        ColumnMapping(
            source_name="FourYearProgram_School",
            target_name="bachelor_school",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Bachelor's degree institution",
        ),
        ColumnMapping(
            source_name="FourYearProgram_Degree",
            target_name="bachelor_degree",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Bachelor's degree type",
        ),
        ColumnMapping(
            source_name="FourYearProgram_Major",
            target_name="bachelor_major",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Bachelor's degree major",
        ),
        ColumnMapping(
            source_name="FourYearProgram_Year",
            target_name="bachelor_year",
            data_type="int",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="Bachelor's degree graduation year",
        ),
        # Graduate program (Master's)
        ColumnMapping(
            source_name="GraduateProgram_School",
            target_name="master_school",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Master's degree institution",
        ),
        ColumnMapping(
            source_name="GraduateProgram_Degree",
            target_name="master_degree",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Master's degree type",
        ),
        ColumnMapping(
            source_name="GraduateProgram_Major",
            target_name="master_major",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Master's degree major",
        ),
        ColumnMapping(
            source_name="GraduateProgram_Year",
            target_name="master_year",
            data_type="int",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="Master's degree graduation year",
        ),
        # Post-graduate program (PhD)
        ColumnMapping(
            source_name="PostGraduateProgram_School",
            target_name="phd_school",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="PhD program institution",
        ),
        ColumnMapping(
            source_name="PostGraduateProgram_Degree",
            target_name="phd_degree",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim"],
            description="PhD degree type",
        ),
        ColumnMapping(
            source_name="PostGraduateProgram_Major",
            target_name="phd_major",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="PhD program major",
        ),
        ColumnMapping(
            source_name="PostGraduateProgram_Year",
            target_name="phd_year",
            data_type="int",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="PhD completion year",
        ),
        # Current program selection
        ColumnMapping(
            source_name="CurrentProgram",
            target_name="current_program",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Current program enrolled in",
        ),
        ColumnMapping(
            source_name="SelProgram",
            target_name="selected_program_id",
            data_type="float",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="Selected program ID (foreign key)",
        ),
        ColumnMapping(
            source_name="SelectedProgram",
            target_name="selected_program_name",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Selected program name",
        ),
        ColumnMapping(
            source_name="SelMajor",
            target_name="selected_major_id",
            data_type="float",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="Selected major ID (foreign key)",
        ),
        ColumnMapping(
            source_name="SelectedMajor",
            target_name="selected_major_name",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Selected major name",
        ),
        ColumnMapping(
            source_name="SelFaculty",
            target_name="selected_faculty_id",
            data_type="float",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="Selected faculty ID (foreign key)",
        ),
        ColumnMapping(
            source_name="SelectedFaculty",
            target_name="selected_faculty_name",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Selected faculty name",
        ),
        ColumnMapping(
            source_name="SelectedDegreeType",
            target_name="selected_degree_type",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Selected degree type",
        ),
        # Admission dates
        ColumnMapping(
            source_name="AdmissionDate",
            target_name="admission_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            validation_priority=2,
            description="General admission date",
        ),
        ColumnMapping(
            source_name="AdmissionDateForUnder",
            target_name="admission_date_undergraduate",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="Undergraduate program admission date",
        ),
        ColumnMapping(
            source_name="AdmissionDateForMaster",
            target_name="admission_date_master",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="Master's program admission date",
        ),
        ColumnMapping(
            source_name="AdmissionDateForDoctor",
            target_name="admission_date_phd",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="PhD program admission date",
        ),
        # Previous education transfers
        ColumnMapping(
            source_name="PreviousDegree",
            target_name="previous_degree",
            data_type="nvarchar(200)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Previous degree for transfer credit",
        ),
        ColumnMapping(
            source_name="PreviousInstitution",
            target_name="previous_institution",
            data_type="nvarchar(200)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Previous institution for transfer credit",
        ),
        ColumnMapping(
            source_name="YearAwarded",
            target_name="previous_degree_year",
            data_type="nvarchar(10)",
            nullable=True,
            cleaning_rules=["trim", "parse_int"],
            description="Year previous degree was awarded",
        ),
        ColumnMapping(
            source_name="OtherCreditTransferInstitution",
            target_name="other_transfer_institution",
            data_type="nvarchar(200)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Other institution for credit transfer",
        ),
        ColumnMapping(
            source_name="DegreeAwarded",
            target_name="degree_awarded",
            data_type="nvarchar(150)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Degree awarded by this institution",
        ),
        ColumnMapping(
            source_name="GraduationDate",
            target_name="graduation_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            validation_priority=2,
            description="Graduation date from this institution",
        ),
        # Academic tracking
        ColumnMapping(
            source_name="FirstTerm",
            target_name="first_term",
            data_type="nvarchar(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="First term enrolled",
        ),
        ColumnMapping(
            source_name="PaidTerm",
            target_name="paid_term",
            data_type="char(50)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Last term paid",
        ),
        # Batch and group assignments
        ColumnMapping(
            source_name="BatchID",
            target_name="batch_id",
            data_type="nvarchar(20)",
            nullable=True,
            cleaning_rules=["trim"],
            description="General batch ID",
        ),
        ColumnMapping(
            source_name="BatchIDForUnder",
            target_name="batch_id_undergraduate",
            data_type="nvarchar(20)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Undergraduate batch ID",
        ),
        ColumnMapping(
            source_name="BatchIDForMaster",
            target_name="batch_id_master",
            data_type="nvarchar(20)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Master's batch ID",
        ),
        ColumnMapping(
            source_name="BatchIDForDoctor",
            target_name="batch_id_phd",
            data_type="nvarchar(20)",
            nullable=True,
            cleaning_rules=["trim"],
            description="PhD batch ID",
        ),
        ColumnMapping(
            source_name="GroupID",
            target_name="group_id",
            data_type="char(20)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Group ID assignment",
        ),
        ColumnMapping(
            source_name="intGroupID",
            target_name="group_id_int",
            data_type="float",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_int"],
            description="Integer group ID",
        ),
        ColumnMapping(
            source_name="Color",
            target_name="color_code",
            data_type="nvarchar(20)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Color coding for student groups",
        ),
        # Status fields
        ColumnMapping(
            source_name="Admitted",
            target_name="is_admitted",
            data_type="int",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_boolean"],
            validation_priority=2,
            description="Admission status flag",
        ),
        ColumnMapping(
            source_name="Deleted",
            target_name="is_deleted",
            data_type="int",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_boolean"],
            validation_priority=2,
            description="Deletion flag",
        ),
        ColumnMapping(
            source_name="Status",
            target_name="status",
            data_type="varchar(15)",
            nullable=True,
            cleaning_rules=["trim"],
            validation_priority=2,
            description="Current student status",
        ),
        ColumnMapping(
            source_name="Transfer",
            target_name="transfer_status",
            data_type="nvarchar(25)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Transfer student status",
        ),
        # Graduation tracking
        ColumnMapping(
            source_name="BAGradDate",
            target_name="ba_graduation_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="Bachelor's graduation date",
        ),
        ColumnMapping(
            source_name="MAGradDate",
            target_name="ma_graduation_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="Master's graduation date",
        ),
        # Enrollment tracking
        ColumnMapping(
            source_name="Lastenroll",
            target_name="last_enrollment_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            validation_priority=2,
            description="Last enrollment date",
        ),
        ColumnMapping(
            source_name="Firstenroll",
            target_name="first_enrollment_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            validation_priority=2,
            description="First enrollment date",
        ),
        ColumnMapping(
            source_name="Firstenroll_Lang",
            target_name="first_enrollment_language",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="First enrollment in language program",
        ),
        ColumnMapping(
            source_name="Firstenroll_BA",
            target_name="first_enrollment_ba",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="First enrollment in BA program",
        ),
        ColumnMapping(
            source_name="Firstenroll_MA",
            target_name="first_enrollment_ma",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="First enrollment in MA program",
        ),
        # Administrative notes
        ColumnMapping(
            source_name="Notes",
            target_name="notes",
            data_type="varchar(255)",
            nullable=True,
            cleaning_rules=["trim", "fix_encoding"],
            description="Administrative notes about student",
        ),
        # Status indicators extracted from legacy name format (virtual columns populated by name parser)
        ColumnMapping(
            source_name="_is_sponsored",
            target_name="is_sponsored_legacy",
            data_type="bit",
            nullable=True,
            cleaning_rules=[],
            description="Legacy sponsored student indicator extracted from name field",
        ),
        ColumnMapping(
            source_name="_sponsor_name",
            target_name="sponsor_name_legacy",
            data_type="nvarchar(100)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Legacy sponsor name extracted from name field",
        ),
        ColumnMapping(
            source_name="_is_frozen",
            target_name="is_frozen_legacy",
            data_type="bit",
            nullable=True,
            cleaning_rules=[],
            description="Legacy frozen account indicator extracted from name field",
        ),
        ColumnMapping(
            source_name="_has_admin_fees",
            target_name="has_admin_fees_legacy",
            data_type="bit",
            nullable=True,
            cleaning_rules=[],
            description="Legacy admin fees indicator extracted from name field",
        ),
        ColumnMapping(
            source_name="_name_raw_indicators",
            target_name="name_raw_indicators",
            data_type="varchar(255)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Raw status indicators found in legacy name field",
        ),
        ColumnMapping(
            source_name="_name_parsing_warnings",
            target_name="name_parsing_warnings",
            data_type="varchar(255)",
            nullable=True,
            cleaning_rules=["trim"],
            description="Warnings from name parsing process",
        ),
        # Audit fields - handle timestamps
        ColumnMapping(
            source_name="CreatedDate",
            target_name="created_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="Record creation timestamp",
        ),
        ColumnMapping(
            source_name="ModifiedDate",
            target_name="modified_date",
            data_type="datetime(23, 3)",
            nullable=True,
            cleaning_rules=["null_standardize", "parse_mssql_datetime"],
            description="Last modification timestamp",
        ),
        # Legacy system primary key - preserve but exclude from profiling
        ColumnMapping(
            source_name="IPK",
            target_name="legacy_id",
            data_type="bigint",
            nullable=False,
            cleaning_rules=["parse_int"],
            description="Legacy system auto-increment primary key",
        ),
    ],
    # Cleaning configuration - specific for student data challenges
    cleaning_rules={
        "date_format": "mssql_datetime",  # "Jan 15 1990 12:00AM" format
        "null_patterns": ["NULL", "NA", "", " ", "0000-00-00"],
        "encoding_fix": True,  # Enable encoding detection and repair
        "khmer_encoding_fix": True,  # Special handling for Khmer text
        "phone_normalization": True,  # Standardize phone formats
        "email_validation": True,  # Validate email addresses
        "gender_normalization": True,  # M/F/Male/Female standardization
    },
    # Performance settings - larger table requires smaller chunks
    chunk_size=2000,  # Students table can be large, use smaller chunks
    # Quality thresholds - stricter for student data
    min_completeness_score=70.0,  # Allow more missing optional fields
    min_consistency_score=80.0,
    max_error_rate=10.0,  # Student data can have more inconsistencies
    # Business context
    dependencies=[],  # Students don't depend on other tables for basic import
    target_django_model="apps.people.models.Student",
    validator_class=StudentValidator,
)
