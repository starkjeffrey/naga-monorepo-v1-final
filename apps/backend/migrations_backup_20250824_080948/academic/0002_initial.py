# Generated by Django 5.2.4 on 2025-07-15 01:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("academic", "0001_initial"),
        ("curriculum", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="canonicalrequirement",
            name="effective_term",
            field=models.ForeignKey(
                help_text="Term when this canonical requirement becomes effective",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="canonical_requirements_starting",
                to="curriculum.term",
                verbose_name="Effective Term",
            ),
        ),
        migrations.AddField(
            model_name="canonicalrequirement",
            name="end_term",
            field=models.ForeignKey(
                blank=True,
                help_text="Term when this requirement is no longer effective (optional)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="canonical_requirements_ending",
                to="curriculum.term",
                verbose_name="End Term",
            ),
        ),
        migrations.AddField(
            model_name="canonicalrequirement",
            name="major",
            field=models.ForeignKey(
                help_text="The major program this canonical requirement applies to",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="canonical_requirements",
                to="curriculum.major",
                verbose_name="Major",
            ),
        ),
        migrations.AddField(
            model_name="canonicalrequirement",
            name="required_course",
            field=models.ForeignKey(
                help_text="The exact course required at this sequence position",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="canonical_requirements",
                to="curriculum.course",
                verbose_name="Required Course",
            ),
        ),
        migrations.AddField(
            model_name="courseequivalency",
            name="effective_term",
            field=models.ForeignKey(
                help_text="Term when this equivalency becomes effective",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="equivalencies_starting",
                to="curriculum.term",
                verbose_name="Effective Term",
            ),
        ),
        migrations.AddField(
            model_name="courseequivalency",
            name="end_term",
            field=models.ForeignKey(
                blank=True,
                help_text="Term when this equivalency expires (optional)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="equivalencies_ending",
                to="curriculum.term",
                verbose_name="End Term",
            ),
        ),
        migrations.AddField(
            model_name="courseequivalency",
            name="equivalent_course",
            field=models.ForeignKey(
                help_text="The course that is equivalent to the original",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="equivalent_to_courses",
                to="curriculum.course",
                verbose_name="Equivalent Course",
            ),
        ),
        migrations.AddField(
            model_name="courseequivalency",
            name="original_course",
            field=models.ForeignKey(
                help_text="The original course being mapped",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="equivalency_mappings",
                to="curriculum.course",
                verbose_name="Original Course",
            ),
        ),
        migrations.AddField(
            model_name="requirement",
            name="effective_term",
            field=models.ForeignKey(
                help_text="Term when this requirement becomes effective",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="requirements_starting",
                to="curriculum.term",
                verbose_name="Effective Term",
            ),
        ),
        migrations.AddField(
            model_name="requirement",
            name="end_term",
            field=models.ForeignKey(
                blank=True,
                help_text="Term when this requirement is no longer effective (optional)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="requirements_ending",
                to="curriculum.term",
                verbose_name="End Term",
            ),
        ),
        migrations.AddField(
            model_name="requirement",
            name="major",
            field=models.ForeignKey(
                help_text="The major program this requirement applies to",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="academic_requirements",
                to="curriculum.major",
                verbose_name="Major",
            ),
        ),
        migrations.AddField(
            model_name="requirementcourse",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fulfills_academic_requirements",
                to="curriculum.course",
                verbose_name="Course",
            ),
        ),
        migrations.AddField(
            model_name="requirementcourse",
            name="requirement",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requirement_courses",
                to="academic.requirement",
                verbose_name="Requirement",
            ),
        ),
        migrations.AddIndex(
            model_name="requirementtype",
            index=models.Index(fields=["code"], name="academic_re_code_d7a109_idx"),
        ),
        migrations.AddIndex(
            model_name="requirementtype",
            index=models.Index(
                fields=["is_active", "display_order"],
                name="academic_re_is_acti_b98930_idx",
            ),
        ),
        migrations.AddField(
            model_name="requirement",
            name="requirement_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="requirements",
                to="academic.requirementtype",
                verbose_name="Requirement Type",
            ),
        ),
        migrations.AddField(
            model_name="studentcourseoverride",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="approved_course_overrides",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Approved By",
            ),
        ),
        migrations.AddField(
            model_name="studentcourseoverride",
            name="effective_term",
            field=models.ForeignKey(
                help_text="Term when this override becomes effective",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="overrides_starting",
                to="curriculum.term",
                verbose_name="Effective Term",
            ),
        ),
        migrations.AddField(
            model_name="studentcourseoverride",
            name="expiration_term",
            field=models.ForeignKey(
                blank=True,
                help_text="Term when this override expires (optional)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="overrides_expiring",
                to="curriculum.term",
                verbose_name="Expiration Term",
            ),
        ),
        migrations.AddField(
            model_name="studentcourseoverride",
            name="original_course",
            field=models.ForeignKey(
                help_text="The course that was originally required",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="substituted_by_overrides",
                to="curriculum.course",
                verbose_name="Original Course",
            ),
        ),
        migrations.AddField(
            model_name="studentcourseoverride",
            name="requested_by",
            field=models.ForeignKey(
                help_text="Person who submitted the override request",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="requested_course_overrides",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Requested By",
            ),
        ),
    ]
