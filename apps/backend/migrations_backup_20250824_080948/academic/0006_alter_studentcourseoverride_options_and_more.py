# Generated by Django 5.2.4 on 2025-07-23 10:45

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("academic", "0005_fix_transfer_credit_fields"),
        ("curriculum", "0004_alter_course_code"),
        ("people", "0009_alter_studentphoto_managers_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="studentcourseoverride",
            options={
                "ordering": ["student", "-request_date"],
                "verbose_name": "Student Course Override",
                "verbose_name_plural": "Student Course Overrides",
            },
        ),
        migrations.AlterModelOptions(
            name="transfercredit",
            options={
                "ordering": ["student", "external_institution", "external_course_code"],
                "verbose_name": "Transfer Credit",
                "verbose_name_plural": "Transfer Credits",
            },
        ),
        migrations.AlterModelManagers(
            name="canonicalrequirementfulfillment",
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveIndex(
            model_name="courseequivalency",
            name="academic_co_origina_a8b7cb_idx",
        ),
        migrations.RemoveIndex(
            model_name="courseequivalency",
            name="academic_co_equival_d95427_idx",
        ),
        migrations.RemoveIndex(
            model_name="courseequivalency",
            name="equivalency_idx",
        ),
        migrations.RemoveIndex(
            model_name="courseequivalency",
            name="academic_co_effecti_6304d3_idx",
        ),
        migrations.RemoveIndex(
            model_name="transfercredit",
            name="academic_tr_approva_4ed34c_idx",
        ),
        migrations.RenameIndex(
            model_name="canonicalrequirementfulfillment",
            new_name="academic_ca_student_0c4a54_idx",
            old_name="academic_ca_student_caa3f9_idx",
        ),
        migrations.RenameIndex(
            model_name="canonicalrequirementfulfillment",
            new_name="academic_ca_canonic_167ca6_idx",
            old_name="academic_ca_canonic_0c8a09_idx",
        ),
        migrations.RenameIndex(
            model_name="canonicalrequirementfulfillment",
            new_name="academic_ca_fulfill_e82546_idx",
            old_name="academic_ca_fulfill_3b9c7f_idx",
        ),
        migrations.RenameIndex(
            model_name="canonicalrequirementfulfillment",
            new_name="academic_ca_fulfill_21afd5_idx",
            old_name="academic_ca_fulfill_8e5d3f_idx",
        ),
        migrations.RemoveField(
            model_name="courseequivalency",
            name="is_bidirectional",
        ),
        migrations.RemoveField(
            model_name="courseequivalency",
            name="notes",
        ),
        migrations.AlterUniqueTogether(
            name="studentcourseoverride",
            unique_together={("student", "original_course", "substitute_course", "effective_term")},
        ),
        migrations.AddField(
            model_name="canonicalrequirementfulfillment",
            name="deleted_at",
            field=models.DateTimeField(
                blank=True,
                help_text="Date and time when the record was marked as deleted",
                null=True,
                verbose_name="Deleted at",
            ),
        ),
        migrations.AddField(
            model_name="canonicalrequirementfulfillment",
            name="is_deleted",
            field=models.BooleanField(
                default=False,
                help_text="Indicates if this record has been soft deleted",
                verbose_name="Is deleted",
            ),
        ),
        migrations.AddField(
            model_name="courseequivalency",
            name="bidirectional",
            field=models.BooleanField(
                default=False,
                help_text="Whether the equivalency works in both directions",
                verbose_name="Bidirectional",
            ),
        ),
        migrations.AddField(
            model_name="studentcourseoverride",
            name="academic_advisor_notes",
            field=models.TextField(
                blank=True,
                help_text="Notes from academic advisor",
                verbose_name="Academic Advisor Notes",
            ),
        ),
        migrations.AddField(
            model_name="studentcourseoverride",
            name="reason",
            field=models.CharField(
                choices=[
                    ("DISCONTINUED", "Course Discontinued"),
                    ("SCHEDULING", "Scheduling Conflict"),
                    ("TRANSFER", "Transfer Equivalency"),
                    ("ACADEMIC", "Academic Exception"),
                    ("MEDICAL", "Medical Accommodation"),
                    ("OTHER", "Other Reason"),
                ],
                default="OTHER",
                max_length=15,
                verbose_name="Override Reason",
            ),
        ),
        migrations.AlterField(
            model_name="canonicalrequirementfulfillment",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="Date and time when the record was created",
                verbose_name="Created at",
            ),
        ),
        migrations.AlterField(
            model_name="canonicalrequirementfulfillment",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                help_text="Date and time when the record was last updated",
                verbose_name="Updated at",
            ),
        ),
        migrations.AlterField(
            model_name="courseequivalency",
            name="effective_term",
            field=models.ForeignKey(
                help_text="Term when this equivalency becomes effective",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="effective_equivalencies",
                to="curriculum.term",
                verbose_name="Effective Term",
            ),
        ),
        migrations.AlterField(
            model_name="courseequivalency",
            name="end_term",
            field=models.ForeignKey(
                blank=True,
                help_text="Term when this equivalency is no longer effective",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="ended_equivalencies",
                to="curriculum.term",
                verbose_name="End Term",
            ),
        ),
        migrations.AlterField(
            model_name="courseequivalency",
            name="equivalent_course",
            field=models.ForeignKey(
                help_text="The course that can be used as equivalent",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reverse_equivalency_mappings",
                to="curriculum.course",
                verbose_name="Equivalent Course",
            ),
        ),
        migrations.AlterField(
            model_name="courseequivalency",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Whether this equivalency is currently active",
                verbose_name="Is Active",
            ),
        ),
        migrations.AlterField(
            model_name="courseequivalency",
            name="original_course",
            field=models.ForeignKey(
                help_text="The course that needs an equivalent",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="equivalency_mappings",
                to="curriculum.course",
                verbose_name="Original Course",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="approval_status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending Approval"),
                    ("APPROVED", "Approved"),
                    ("REJECTED", "Rejected"),
                    ("EXPIRED", "Expired"),
                ],
                default="PENDING",
                max_length=10,
                verbose_name="Approval Status",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="detailed_reason",
            field=models.TextField(
                help_text="Detailed explanation for this override request",
                verbose_name="Detailed Reason",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="effective_term",
            field=models.ForeignKey(
                help_text="Term when this override becomes effective",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="effective_overrides",
                to="curriculum.term",
                verbose_name="Effective Term",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="expiration_term",
            field=models.ForeignKey(
                blank=True,
                help_text="Term when this override expires",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="expiring_overrides",
                to="curriculum.term",
                verbose_name="Expiration Term",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="original_course",
            field=models.ForeignKey(
                help_text="The course that should be replaced",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="overridden_by_students",
                to="curriculum.course",
                verbose_name="Original Course",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="rejection_reason",
            field=models.TextField(
                blank=True,
                help_text="Reason for rejection if applicable",
                verbose_name="Rejection Reason",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="request_date",
            field=models.DateTimeField(auto_now_add=True, verbose_name="Request Date"),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="requested_by",
            field=models.ForeignKey(
                help_text="User who requested this override",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="requested_overrides",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Requested By",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="course_overrides",
                to="people.studentprofile",
                verbose_name="Student",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="substitute_course",
            field=models.ForeignKey(
                help_text="The course to use as a substitute",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="substitutes_for_students",
                to="curriculum.course",
                verbose_name="Substitute Course",
            ),
        ),
        migrations.AlterField(
            model_name="studentcourseoverride",
            name="supporting_documentation",
            field=models.TextField(
                blank=True,
                help_text="Details of any supporting documentation",
                verbose_name="Supporting Documentation",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="approval_status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending Review"),
                    ("APPROVED", "Approved"),
                    ("REJECTED", "Rejected"),
                    ("INFO", "More Information Required"),
                ],
                default="PENDING",
                max_length=10,
                verbose_name="Approval Status",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="credit_type",
            field=models.CharField(
                choices=[
                    ("COURSE", "Course Transfer"),
                    ("EXAM", "Examination Credit"),
                    ("LIFE", "Life Experience"),
                    ("MILITARY", "Military Credit"),
                ],
                default="COURSE",
                max_length=10,
                verbose_name="Credit Type",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="documentation",
            field=models.TextField(
                blank=True,
                help_text="Details about supporting documentation provided",
                verbose_name="Documentation",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="equivalent_course",
            field=models.ForeignKey(
                blank=True,
                help_text="Internal course this transfer credit maps to",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="transfer_equivalents",
                to="curriculum.course",
                verbose_name="Equivalent Course",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="external_course_code",
            field=models.CharField(
                help_text="Course code at the external institution",
                max_length=20,
                verbose_name="External Course Code",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="external_course_name",
            field=models.CharField(
                help_text="Course name at the external institution",
                max_length=200,
                verbose_name="External Course Name",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="external_credits",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Number of credits earned at external institution",
                max_digits=5,
                validators=[
                    django.core.validators.MinValueValidator(Decimal("0.0")),
                    django.core.validators.MaxValueValidator(Decimal("12.0")),
                ],
                verbose_name="External Credits",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="review_date",
            field=models.DateTimeField(blank=True, null=True, verbose_name="Review Date"),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="review_notes",
            field=models.TextField(
                blank=True,
                help_text="Notes from the review process",
                verbose_name="Review Notes",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="reviewed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="reviewed_transfer_credits",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Reviewed By",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transfer_credits",
                to="people.studentprofile",
                verbose_name="Student",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="term_taken",
            field=models.CharField(
                blank=True,
                help_text="Term/semester when course was taken externally",
                max_length=50,
                verbose_name="Term Taken",
            ),
        ),
        migrations.AlterField(
            model_name="transfercredit",
            name="year_taken",
            field=models.PositiveSmallIntegerField(
                blank=True,
                help_text="Year when course was taken externally",
                null=True,
                verbose_name="Year Taken",
            ),
        ),
        migrations.AddIndex(
            model_name="courseequivalency",
            index=models.Index(
                fields=["original_course", "effective_term"],
                name="academic_co_origina_0bdd16_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="courseequivalency",
            index=models.Index(
                fields=["equivalent_course", "effective_term"],
                name="academic_co_equival_ce8caf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="courseequivalency",
            index=models.Index(fields=["is_active"], name="academic_co_is_acti_153977_idx"),
        ),
        migrations.AddIndex(
            model_name="transfercredit",
            index=models.Index(fields=["equivalent_course"], name="academic_tr_equival_19204e_idx"),
        ),
        migrations.AddIndex(
            model_name="transfercredit",
            index=models.Index(
                fields=["approval_status", "review_date"],
                name="academic_tr_approva_1e612d_idx",
            ),
        ),
        migrations.RemoveField(
            model_name="studentcourseoverride",
            name="notes",
        ),
        migrations.RemoveField(
            model_name="studentcourseoverride",
            name="override_reason",
        ),
    ]
