# Generated by Django 5.2.4 on 2025-07-21 09:12

import django.core.validators
import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("finance", "0003_coursepricing_created_by_coursepricing_updated_by_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="financialtransaction",
            name="transaction_type",
            field=models.CharField(
                choices=[
                    ("INVOICE_CREATED", "Invoice Created"),
                    ("INVOICE_SENT", "Invoice Sent"),
                    ("INVOICE_MODIFIED", "Invoice Modified"),
                    ("INVOICE_CANCELLED", "Invoice Cancelled"),
                    ("PAYMENT_RECEIVED", "Payment Received"),
                    ("PAYMENT_REFUNDED", "Payment Refunded"),
                    ("ADJUSTMENT_APPLIED", "Adjustment Applied"),
                    ("DISCOUNT_APPLIED", "Discount Applied"),
                    ("FEE_WAIVED", "Fee Waived"),
                    ("PRICE_CHANGED", "Price Changed"),
                    ("CASH_DRAWER_OPEN", "Cash Drawer Opened"),
                    ("CASH_DRAWER_CLOSE", "Cash Drawer Closed"),
                ],
                help_text="Type of financial transaction",
                max_length=30,
                verbose_name="Transaction Type",
            ),
        ),
        migrations.CreateModel(
            name="CashierSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="Updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this record has been soft deleted",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was marked as deleted",
                        null=True,
                        verbose_name="Deleted at",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        help_text="Date of this cashier session",
                        verbose_name="Session Date",
                    ),
                ),
                (
                    "opening_time",
                    models.DateTimeField(
                        help_text="When the cash drawer was opened",
                        verbose_name="Opening Time",
                    ),
                ),
                (
                    "closing_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the cash drawer was closed",
                        null=True,
                        verbose_name="Closing Time",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Open"),
                            ("CLOSED", "Closed"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="OPEN",
                        help_text="Current session status",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "opening_cash",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cash amount at drawer opening",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Opening Cash",
                    ),
                ),
                (
                    "closing_cash",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cash amount at drawer closing",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Closing Cash",
                    ),
                ),
                (
                    "expected_cash",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Expected cash based on transactions",
                        max_digits=10,
                        null=True,
                        verbose_name="Expected Cash",
                    ),
                ),
                (
                    "variance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Difference between expected and actual (+ over, - short)",
                        max_digits=10,
                        null=True,
                        verbose_name="Variance",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Session notes or variance explanations",
                        verbose_name="Notes",
                    ),
                ),
                (
                    "cashier",
                    models.ForeignKey(
                        help_text="User operating the cash drawer",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cashier_sessions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Cashier",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cashier Session",
                "verbose_name_plural": "Cashier Sessions",
                "ordering": ["-date", "-opening_time"],
                "indexes": [
                    models.Index(
                        fields=["cashier", "date"],
                        name="finance_cas_cashier_735e7e_idx",
                    ),
                    models.Index(fields=["status", "date"], name="finance_cas_status_a9ca53_idx"),
                ],
                "unique_together": {("cashier", "date", "status")},
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
    ]
