# Generated by Django 5.2.4 on 2025-07-28 13:50

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("finance", "0016_make_batch_term_id_nullable"),
    ]

    operations = [
        # Fix ReconciliationRule model - add missing fields
        migrations.AddField(
            model_name="reconciliationrule",
            name="rule_name",
            field=models.CharField(
                default="Default Rule",
                max_length=100,
                unique=True,
                verbose_name="Rule Name",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationrule",
            name="confidence_threshold",
            field=models.DecimalField(
                decimal_places=2,
                default=80.00,
                help_text="Confidence threshold percentage (0-100)",
                max_digits=5,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
                verbose_name="Confidence Threshold",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationrule",
            name="times_applied",
            field=models.PositiveIntegerField(default=0, verbose_name="Times Applied"),
        ),
        migrations.AddField(
            model_name="reconciliationrule",
            name="last_applied",
            field=models.DateTimeField(blank=True, null=True, verbose_name="Last Applied"),
        ),
        # Remove fields that don't exist in current model
        migrations.RemoveField(
            model_name="reconciliationrule",
            name="failure_count",
        ),
        migrations.RemoveField(
            model_name="reconciliationrule",
            name="last_used",
        ),
        # Fix ReconciliationStatus model - add missing fields
        migrations.AddField(
            model_name="reconciliationstatus",
            name="confidence_level",
            field=models.CharField(
                choices=[
                    ("HIGH", "High (95%+)"),
                    ("MEDIUM", "Medium (80-94%)"),
                    ("LOW", "Low (<80%)"),
                    ("NONE", "No Confidence"),
                ],
                default="NONE",
                max_length=10,
                verbose_name="Confidence Level",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationstatus",
            name="pricing_method_applied",
            field=models.CharField(
                blank=True,
                choices=[
                    ("DEFAULT", "Default Pricing"),
                    ("FIXED", "Course Fixed Pricing"),
                    ("SENIOR", "Senior Project Pricing"),
                    ("READING", "Reading Class Pricing"),
                    ("HISTORICAL", "Historical Pattern Match"),
                    ("MANUAL", "Manual Override"),
                    ("HYBRID", "Hybrid/Multiple Methods"),
                ],
                max_length=20,
                null=True,
                verbose_name="Pricing Method Applied",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationstatus",
            name="refinement_attempts",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Number of times refinement has been attempted",
                verbose_name="Refinement Attempts",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationstatus",
            name="confidence_history",
            field=models.JSONField(
                default=list,
                help_text="Track confidence evolution over refinement attempts",
                verbose_name="Confidence History",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationstatus",
            name="refinement_strategies_tried",
            field=models.JSONField(
                default=list,
                help_text="List of refinement strategies that have been attempted",
                verbose_name="Strategies Tried",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationstatus",
            name="reconciled_date",
            field=models.DateTimeField(blank=True, null=True, verbose_name="Reconciled Date"),
        ),
        migrations.AddField(
            model_name="reconciliationstatus",
            name="error_category",
            field=models.CharField(blank=True, max_length=50, verbose_name="Error Category"),
        ),
        migrations.AddField(
            model_name="reconciliationstatus",
            name="error_details",
            field=models.JSONField(default=dict, verbose_name="Error Details"),
        ),
        # Remove fields that don't exist in current model
        migrations.RemoveField(
            model_name="reconciliationstatus",
            name="match_reason",
        ),
        migrations.RemoveField(
            model_name="reconciliationstatus",
            name="confidence_evolution",
        ),
        migrations.RemoveField(
            model_name="reconciliationstatus",
            name="attempt_count",
        ),
        # Update field names to match model
        migrations.RenameField(
            model_name="reconciliationstatus",
            old_name="last_attempt_date",
            new_name="last_attempt_date",
        ),
    ]
