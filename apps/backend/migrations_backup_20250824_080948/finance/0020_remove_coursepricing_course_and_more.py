# Generated by Django 5.2.4 on 2025-07-30 00:46

import datetime
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("curriculum", "0005_alter_major_program_type"),
        ("enrollment", "0005_alter_programenrollment_cycle_and_more"),
        ("finance", "0019_merge_20250729_1858"),
        ("people", "0009_alter_studentphoto_managers_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name="coursepricing",
            name="course",
        ),
        migrations.RemoveField(
            model_name="coursepricing",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="coursepricing",
            name="pricing_tier",
        ),
        migrations.RemoveField(
            model_name="coursepricing",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="termpricingadjustment",
            name="course_pricing",
        ),
        migrations.RemoveField(
            model_name="pricingtier",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="pricingtier",
            name="effective_term",
        ),
        migrations.RemoveField(
            model_name="pricingtier",
            name="updated_by",
        ),
        migrations.AlterUniqueTogether(
            name="termpricingadjustment",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="termpricingadjustment",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="termpricingadjustment",
            name="term",
        ),
        migrations.RemoveField(
            model_name="termpricingadjustment",
            name="updated_by",
        ),
        migrations.AlterModelOptions(
            name="cashiersession",
            options={
                "ordering": ["-opened_at"],
                "verbose_name": "Cashier Session",
                "verbose_name_plural": "Cashier Sessions",
            },
        ),
        migrations.AlterModelOptions(
            name="payment",
            options={"ordering": ["-payment_date"], "verbose_name": "Payment", "verbose_name_plural": "Payments"},
        ),
        migrations.AlterModelOptions(
            name="reconciliationrule",
            options={
                "ordering": ["priority", "rule_name"],
                "verbose_name": "Reconciliation Rule",
                "verbose_name_plural": "Reconciliation Rules",
            },
        ),
        migrations.RemoveConstraint(
            model_name="clerkidentification",
            name="unique_clerk_computer",
        ),
        migrations.RemoveConstraint(
            model_name="invoice",
            name="paid_amount_not_exceed_total",
        ),
        migrations.RemoveConstraint(
            model_name="invoice",
            name="paid_amount_non_negative",
        ),
        migrations.RemoveConstraint(
            model_name="invoice",
            name="total_amount_non_negative",
        ),
        migrations.RemoveConstraint(
            model_name="invoice",
            name="subtotal_non_negative",
        ),
        migrations.RemoveConstraint(
            model_name="invoice",
            name="due_date_after_issue_date",
        ),
        migrations.RemoveConstraint(
            model_name="legacyreceiptmapping",
            name="unique_receipt_per_batch",
        ),
        migrations.RemoveConstraint(
            model_name="payment",
            name="payment_amount_positive_or_refund",
        ),
        migrations.RemoveConstraint(
            model_name="payment",
            name="unique_external_payment_reference",
        ),
        migrations.RemoveConstraint(
            model_name="reconstructionscholarshipentry",
            name="unique_scholarship_per_student_term",
        ),
        migrations.RemoveIndex(
            model_name="cashiersession",
            name="finance_cas_cashier_735e7e_idx",
        ),
        migrations.RemoveIndex(
            model_name="cashiersession",
            name="finance_cas_status_a9ca53_idx",
        ),
        migrations.RemoveIndex(
            model_name="feepricing",
            name="finance_fee_fee_typ_2878f7_idx",
        ),
        migrations.RemoveIndex(
            model_name="financialtransaction",
            name="finance_fin_student_b0c48d_idx",
        ),
        migrations.RemoveIndex(
            model_name="financialtransaction",
            name="finance_fin_transac_44349a_idx",
        ),
        migrations.RemoveIndex(
            model_name="financialtransaction",
            name="finance_fin_invoice_79a048_idx",
        ),
        migrations.RemoveIndex(
            model_name="financialtransaction",
            name="finance_fin_transac_d81d7d_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_inv_student_9f0a3a_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_inv_term_id_c5839f_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_inv_invoice_89da8a_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_inv_student_9ef635_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_inv_student_96f21e_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_inv_due_dat_fb9ca1_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_invoice_legacy_receipt_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_invoice_historical_status_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_invoice_reprocessing_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoice",
            name="finance_invoice_batch_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoicelineitem",
            name="finance_inv_invoice_9f0f79_idx",
        ),
        migrations.RemoveIndex(
            model_name="invoicelineitem",
            name="finance_inv_enrollm_ebdee6_idx",
        ),
        migrations.RemoveIndex(
            model_name="legacyreceiptmapping",
            name="finance_legacy_mapping_receipt_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_pay_invoice_01b027_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_pay_status_d78b79_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_pay_payment_782a4d_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_pay_payment_9b4d4f_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_pay_idempot_dc5d1a_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_pay_process_1c878e_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_payment_legacy_receipt_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_payment_clerk_idx",
        ),
        migrations.RemoveIndex(
            model_name="payment",
            name="finance_payment_historical_idx",
        ),
        migrations.RenameIndex(
            model_name="arreconstructionbatch",
            new_name="finance_ar__status_e5d34d_idx",
            old_name="finance_ar_batch_status_idx",
        ),
        migrations.RenameIndex(
            model_name="arreconstructionbatch",
            new_name="finance_ar__term_id_b0bd33_idx",
            old_name="finance_ar_batch_term_mode_idx",
        ),
        migrations.RenameIndex(
            model_name="clerkidentification",
            new_name="finance_cle_clerk_n_f3392c_idx",
            old_name="finance_clerk_name_idx",
        ),
        migrations.RenameIndex(
            model_name="clerkidentification",
            new_name="finance_cle_verifie_9c3976_idx",
            old_name="finance_clerk_verified_idx",
        ),
        migrations.RenameIndex(
            model_name="coursefixedpricing",
            new_name="finance_cou_course__d106ae_idx",
            old_name="finance_cou_course__c7f8f6_idx",
        ),
        migrations.RenameIndex(
            model_name="coursefixedpricing",
            new_name="finance_cou_effecti_3d75c1_idx",
            old_name="finance_cou_effecti_ee431d_idx",
        ),
        migrations.RenameIndex(
            model_name="defaultpricing",
            new_name="finance_def_cycle_i_c98ae8_idx",
            old_name="finance_def_cycle_i_71c147_idx",
        ),
        migrations.RenameIndex(
            model_name="defaultpricing",
            new_name="finance_def_effecti_2140ff_idx",
            old_name="finance_def_effecti_e075fc_idx",
        ),
        migrations.RenameIndex(
            model_name="discountrule",
            new_name="finance_dis_rule_ty_9d1c33_idx",
            old_name="finance_discount_rule_type_active_idx",
        ),
        migrations.RenameIndex(
            model_name="discountrule",
            new_name="finance_dis_pattern_932c26_idx",
            old_name="finance_discount_rule_pattern_idx",
        ),
        migrations.RenameIndex(
            model_name="feeglmapping",
            new_name="finance_fee_fee_cod_c7d613_idx",
            old_name="finance_fee_fee_cod_03ce77_idx",
        ),
        migrations.RenameIndex(
            model_name="feeglmapping",
            new_name="finance_fee_fee_typ_3b84d1_idx",
            old_name="finance_fee_fee_typ_6f2722_idx",
        ),
        migrations.RenameIndex(
            model_name="feeglmapping",
            new_name="finance_fee_revenue_afe0d7_idx",
            old_name="finance_fee_revenue_0de016_idx",
        ),
        migrations.RenameIndex(
            model_name="feepricing",
            new_name="finance_fee_effecti_3fe76b_idx",
            old_name="finance_fee_effecti_eb2c66_idx",
        ),
        migrations.RenameIndex(
            model_name="glaccount",
            new_name="finance_gl__account_e15104_idx",
            old_name="finance_gla_account_05e50a_idx",
        ),
        migrations.RenameIndex(
            model_name="glaccount",
            new_name="finance_gl__is_acti_1ebe5f_idx",
            old_name="finance_gla_is_acti_18d13d_idx",
        ),
        migrations.RenameIndex(
            model_name="glaccount",
            new_name="finance_gl__parent__f71e35_idx",
            old_name="finance_gla_parent__3ed03a_idx",
        ),
        migrations.RenameIndex(
            model_name="glbatch",
            new_name="finance_gl__account_9b25c4_idx",
            old_name="finance_glb_account_bedc61_idx",
        ),
        migrations.RenameIndex(
            model_name="glbatch",
            new_name="finance_gl__status_fd9dc2_idx",
            old_name="finance_glb_status_5f14c0_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentry",
            new_name="finance_jou_account_d94d63_idx",
            old_name="finance_jou_account_f55e96_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentry",
            new_name="finance_jou_entry_t_9bfe83_idx",
            old_name="finance_jou_entry_t_b520cc_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentry",
            new_name="finance_jou_batch_i_3ed353_idx",
            old_name="finance_jou_batch_i_ca5e0c_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentry",
            new_name="finance_jou_status_455589_idx",
            old_name="finance_jou_status_377fc7_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentryline",
            new_name="finance_jou_gl_acco_111997_idx",
            old_name="finance_jou_gl_acco_7b3626_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentryline",
            new_name="finance_jou_referen_f83db1_idx",
            old_name="finance_jou_referen_405569_idx",
        ),
        migrations.RenameIndex(
            model_name="legacyreceiptmapping",
            new_name="finance_leg_legacy__e32c59_idx",
            old_name="finance_legacy_mapping_student_term_idx",
        ),
        migrations.RenameIndex(
            model_name="legacyreceiptmapping",
            new_name="finance_leg_validat_42825c_idx",
            old_name="finance_legacy_mapping_status_idx",
        ),
        migrations.RenameIndex(
            model_name="legacyreceiptmapping",
            new_name="finance_leg_reconst_6a268e_idx",
            old_name="finance_legacy_mapping_batch_idx",
        ),
        migrations.RenameIndex(
            model_name="readingclasspricing",
            new_name="finance_rea_cycle_i_eb517c_idx",
            old_name="finance_rea_cycle_i_5b7d30_idx",
        ),
        migrations.RenameIndex(
            model_name="readingclasspricing",
            new_name="finance_rea_effecti_752d2c_idx",
            old_name="finance_rea_effecti_776e92_idx",
        ),
        migrations.RenameIndex(
            model_name="reconstructionscholarshipentry",
            new_name="finance_rec_require_219c8d_idx",
            old_name="finance_scholarship_reprocessing_idx",
        ),
        migrations.RenameIndex(
            model_name="reconstructionscholarshipentry",
            new_name="finance_rec_discove_2550ba_idx",
            old_name="finance_scholarship_receipt_idx",
        ),
        migrations.RenameIndex(
            model_name="seniorprojectpricing",
            new_name="finance_sen_tier_08fee1_idx",
            old_name="finance_sen_tier_462e6e_idx",
        ),
        migrations.RenameIndex(
            model_name="seniorprojectpricing",
            new_name="finance_sen_effecti_904fdc_idx",
            old_name="finance_sen_effecti_a7bb6e_idx",
        ),
        migrations.AlterUniqueTogether(
            name="cashiersession",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="feepricing",
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name="payment",
            name="idempotency_key",
        ),
        migrations.AddField(
            model_name="cashiersession",
            name="closed_at",
            field=models.DateTimeField(
                blank=True, help_text="When session was closed", null=True, verbose_name="Closed At"
            ),
        ),
        migrations.AddField(
            model_name="cashiersession",
            name="closing_balance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Cash drawer closing balance",
                max_digits=10,
                null=True,
                verbose_name="Closing Balance",
            ),
        ),
        migrations.AddField(
            model_name="cashiersession",
            name="expected_balance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Expected balance based on transactions",
                max_digits=10,
                null=True,
                verbose_name="Expected Balance",
            ),
        ),
        migrations.AddField(
            model_name="cashiersession",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this session is currently active", verbose_name="Is Active"
            ),
        ),
        migrations.AddField(
            model_name="cashiersession",
            name="opened_at",
            field=models.DateTimeField(
                default=django.utils.timezone.now, help_text="When session was opened", verbose_name="Opened At"
            ),
        ),
        migrations.AddField(
            model_name="cashiersession",
            name="opening_balance",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Cash drawer opening balance",
                max_digits=10,
                verbose_name="Opening Balance",
            ),
        ),
        migrations.AddField(
            model_name="cashiersession",
            name="session_number",
            field=models.CharField(
                default="DEFAULT-001",
                help_text="Unique session identifier",
                max_length=50,
                unique=True,
                verbose_name="Session Number",
            ),
        ),
        migrations.AlterField(
            model_name="arreconstructionbatch",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Date and time when the record was created", verbose_name="Created at"
            ),
        ),
        migrations.AlterField(
            model_name="arreconstructionbatch",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="arreconstructionbatch",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, help_text="Date and time when the record was last updated", verbose_name="Updated at"
            ),
        ),
        migrations.AlterField(
            model_name="arreconstructionbatch",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="cashiersession",
            name="cashier",
            field=models.ForeignKey(
                help_text="User operating the cashier session",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="cashier_sessions",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Cashier",
            ),
        ),
        migrations.AlterField(
            model_name="cashiersession",
            name="notes",
            field=models.TextField(blank=True, help_text="Session notes and observations", verbose_name="Notes"),
        ),
        migrations.AlterField(
            model_name="clerkidentification",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Date and time when the record was created", verbose_name="Created at"
            ),
        ),
        migrations.AlterField(
            model_name="clerkidentification",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="clerkidentification",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, help_text="Date and time when the record was last updated", verbose_name="Updated at"
            ),
        ),
        migrations.AlterField(
            model_name="clerkidentification",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="discountrule",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Date and time when the record was created", verbose_name="Created at"
            ),
        ),
        migrations.AlterField(
            model_name="discountrule",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="discountrule",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, help_text="Date and time when the record was last updated", verbose_name="Updated at"
            ),
        ),
        migrations.AlterField(
            model_name="discountrule",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="feepricing",
            name="currency",
            field=models.CharField(
                choices=[("USD", "US Dollar")],
                default="USD",
                help_text="Fee currency",
                max_length=3,
                verbose_name="Currency",
            ),
        ),
        migrations.AlterField(
            model_name="feepricing",
            name="description",
            field=models.TextField(
                blank=True, help_text="Detailed description of what this fee covers", verbose_name="Description"
            ),
        ),
        migrations.AlterField(
            model_name="feepricing",
            name="effective_date",
            field=models.DateField(
                default=datetime.date.today,
                help_text="When this fee pricing becomes effective",
                verbose_name="Effective Date",
            ),
        ),
        migrations.AlterField(
            model_name="feepricing",
            name="end_date",
            field=models.DateField(
                blank=True,
                help_text="When this fee pricing expires (null = current)",
                null=True,
                verbose_name="End Date",
            ),
        ),
        migrations.AlterField(
            model_name="feepricing",
            name="is_mandatory",
            field=models.BooleanField(
                default=True,
                help_text="Whether this fee is mandatory for all applicable students",
                verbose_name="Is Mandatory",
            ),
        ),
        migrations.AlterField(
            model_name="feepricing",
            name="is_per_course",
            field=models.BooleanField(
                default=False,
                help_text="Whether this fee is charged per course enrollment",
                verbose_name="Is Per Course",
            ),
        ),
        migrations.AlterField(
            model_name="feepricing",
            name="is_per_term",
            field=models.BooleanField(
                default=False, help_text="Whether this fee is charged per term", verbose_name="Is Per Term"
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="currency",
            field=models.CharField(
                choices=[("USD", "US Dollar"), ("KHR", "Cambodian Riel")],
                default="USD",
                help_text="Transaction currency",
                max_length=3,
                verbose_name="Currency",
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="description",
            field=models.CharField(
                help_text="Description of the transaction", max_length=255, verbose_name="Description"
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="invoice",
            field=models.ForeignKey(
                blank=True,
                help_text="Related invoice (if applicable)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="transactions",
                to="finance.invoice",
                verbose_name="Invoice",
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="payment",
            field=models.ForeignKey(
                blank=True,
                help_text="Related payment (if applicable)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="transactions",
                to="finance.payment",
                verbose_name="Payment",
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="processed_by",
            field=models.ForeignKey(
                help_text="User who processed this transaction",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="processed_transactions",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Processed By",
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="reference_data",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Additional reference data for this transaction",
                verbose_name="Reference Data",
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="student",
            field=models.ForeignKey(
                help_text="Student this transaction affects",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="financial_transactions",
                to="people.studentprofile",
                verbose_name="Student",
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="transaction_date",
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                help_text="When transaction occurred",
                verbose_name="Transaction Date",
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="transaction_id",
            field=models.CharField(
                help_text="Unique transaction identifier", max_length=50, unique=True, verbose_name="Transaction ID"
            ),
        ),
        migrations.AlterField(
            model_name="financialtransaction",
            name="transaction_type",
            field=models.CharField(
                choices=[
                    ("INVOICE_CREATED", "Invoice Created"),
                    ("PAYMENT_RECEIVED", "Payment Received"),
                    ("PAYMENT_REFUNDED", "Payment Refunded"),
                    ("ADJUSTMENT", "Manual Adjustment"),
                    ("WRITEOFF", "Bad Debt Write-off"),
                ],
                help_text="Type of financial transaction",
                max_length=20,
                verbose_name="Transaction Type",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="currency",
            field=models.CharField(
                choices=[("USD", "US Dollar"), ("KHR", "Cambodian Riel")],
                default="USD",
                help_text="Invoice currency",
                max_length=3,
                verbose_name="Currency",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="discount_applied",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total discount applied from legacy receipt",
                max_digits=10,
                verbose_name="Discount Applied",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="is_historical",
            field=models.BooleanField(
                default=False,
                help_text="True for invoices reconstructed from legacy data",
                verbose_name="Is Historical",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="issue_date",
            field=models.DateField(
                default=datetime.date.today, help_text="Date invoice was issued", verbose_name="Issue Date"
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="legacy_notes",
            field=models.TextField(
                blank=True, help_text="Original notes from legacy receipt", verbose_name="Legacy Notes"
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="legacy_processing_clerk",
            field=models.CharField(
                blank=True,
                help_text="Clerk who processed the original receipt",
                max_length=100,
                verbose_name="Legacy Processing Clerk",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="legacy_receipt_id",
            field=models.CharField(
                blank=True,
                default="UNKNOWN",
                help_text="Full receipt ID with clerk information from legacy system",
                max_length=200,
                verbose_name="Legacy Receipt ID",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="invoice",
            name="notes",
            field=models.TextField(blank=True, help_text="Additional notes for this invoice", verbose_name="Notes"),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="original_amount",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Original amount from legacy receipt before discounts",
                max_digits=10,
                null=True,
                verbose_name="Original Amount",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="paid_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Amount already paid",
                max_digits=10,
                verbose_name="Paid Amount",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="reconstruction_batch",
            field=models.ForeignKey(
                blank=True,
                help_text="A/R reconstruction batch that created this invoice",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reconstructed_invoices",
                to="finance.arreconstructionbatch",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="reconstruction_status",
            field=models.CharField(
                blank=True,
                help_text="Status of A/R reconstruction process",
                max_length=20,
                verbose_name="Reconstruction Status",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="sent_date",
            field=models.DateTimeField(
                blank=True, help_text="When invoice was sent to student", null=True, verbose_name="Sent Date"
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="status",
            field=models.CharField(
                choices=[
                    ("DRAFT", "Draft"),
                    ("SENT", "Sent"),
                    ("PAID", "Paid"),
                    ("PARTIALLY_PAID", "Partially Paid"),
                    ("OVERDUE", "Overdue"),
                    ("CANCELLED", "Cancelled"),
                    ("REFUNDED", "Refunded"),
                ],
                default="DRAFT",
                help_text="Current invoice status",
                max_length=20,
                verbose_name="Status",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="subtotal",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Subtotal before tax",
                max_digits=10,
                verbose_name="Subtotal",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="tax_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total tax amount",
                max_digits=10,
                verbose_name="Tax Amount",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="term",
            field=models.ForeignKey(
                help_text="Academic term for this invoice",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="invoices",
                to="curriculum.term",
                verbose_name="Term",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="total_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total invoice amount",
                max_digits=10,
                verbose_name="Total Amount",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="version",
            field=models.PositiveIntegerField(
                default=1, help_text="Version number for optimistic locking", verbose_name="Version"
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="base_amount",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Base amount before discounts",
                max_digits=10,
                null=True,
                verbose_name="Base Amount",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="description",
            field=models.CharField(help_text="Description of this charge", max_length=255, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="discount_reason",
            field=models.TextField(
                blank=True, help_text="Reason for discount from legacy notes", verbose_name="Discount Reason"
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="enrollment",
            field=models.ForeignKey(
                blank=True,
                help_text="Class enrollment this charge is for (if applicable)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="invoice_line_items",
                to="enrollment.classheaderenrollment",
                verbose_name="Enrollment",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="fee_pricing",
            field=models.ForeignKey(
                blank=True,
                help_text="Fee pricing record this charge is based on",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="invoice_line_items",
                to="finance.feepricing",
                verbose_name="Fee Pricing",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="invoice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="line_items",
                to="finance.invoice",
                verbose_name="Invoice",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="legacy_course_level",
            field=models.CharField(
                blank=True,
                help_text="Course level from legacy receipt",
                max_length=50,
                verbose_name="Legacy Course Level",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="legacy_program_code",
            field=models.CharField(
                blank=True,
                help_text="Program code from legacy receipt",
                max_length=50,
                verbose_name="Legacy Program Code",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="line_item_type",
            field=models.CharField(
                choices=[
                    ("COURSE", "Course Enrollment"),
                    ("FEE", "Fee"),
                    ("ADJUSTMENT", "Adjustment"),
                    ("REFUND", "Refund"),
                ],
                help_text="Type of charge",
                max_length=20,
                verbose_name="Line Item Type",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="line_total",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Total for this line (unit_price x quantity)",
                max_digits=10,
                verbose_name="Line Total",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="pricing_confidence",
            field=models.CharField(
                blank=True,
                help_text="Confidence level of pricing reconstruction",
                max_length=20,
                verbose_name="Pricing Confidence",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="pricing_method_used",
            field=models.CharField(
                blank=True,
                help_text="Method used to determine pricing",
                max_length=50,
                verbose_name="Pricing Method Used",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="quantity",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("1.00"),
                help_text="Quantity being charged",
                max_digits=6,
                validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                verbose_name="Quantity",
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="unit_price",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Price per unit",
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="Unit Price",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="ar_transaction_mapping",
            field=models.CharField(
                blank=True,
                default="",
                help_text="How this maps to A/R transaction types",
                max_length=100,
                verbose_name="A/R Transaction Mapping",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Date and time when the record was created", verbose_name="Created at"
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="legacy_notes",
            field=models.TextField(
                blank=True, default="", help_text="Original notes from legacy receipt", verbose_name="Legacy Notes"
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="normalized_note",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Normalized note string for database storage",
                verbose_name="Normalized Note",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="notes_processing_confidence",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Confidence score from notes processing",
                max_digits=3,
                verbose_name="Notes Processing Confidence",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="parsed_amount_adjustment",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Amount adjustment parsed from notes",
                max_digits=10,
                null=True,
                verbose_name="Parsed Amount Adjustment",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="parsed_authority",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Authority/approver parsed from notes",
                max_length=100,
                verbose_name="Parsed Authority",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="parsed_note_type",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Type of note as parsed by processing system",
                max_length=50,
                verbose_name="Parsed Note Type",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="parsed_percentage_adjustment",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Percentage adjustment parsed from notes",
                max_digits=5,
                null=True,
                verbose_name="Parsed Percentage Adjustment",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="parsed_reason",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Reason parsed from notes",
                max_length=200,
                verbose_name="Parsed Reason",
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, help_text="Date and time when the record was last updated", verbose_name="Updated at"
            ),
        ),
        migrations.AlterField(
            model_name="legacyreceiptmapping",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="materialitythreshold",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="materialitythreshold",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="amount",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Payment amount (negative for refunds)",
                max_digits=10,
                verbose_name="Amount",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="currency",
            field=models.CharField(
                choices=[("USD", "US Dollar"), ("KHR", "Cambodian Riel")],
                default="USD",
                help_text="Payment currency",
                max_length=3,
                verbose_name="Currency",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="external_reference",
            field=models.CharField(
                blank=True,
                help_text="External system reference (bank ref, transaction ID, etc.)",
                max_length=100,
                verbose_name="External Reference",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="is_historical_payment",
            field=models.BooleanField(
                default=False,
                help_text="True for payments reconstructed from legacy data",
                verbose_name="Is Historical Payment",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="legacy_business_notes",
            field=models.TextField(
                blank=True,
                help_text="Original business notes from legacy receipt",
                verbose_name="Legacy Business Notes",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="legacy_processing_clerk",
            field=models.CharField(
                blank=True,
                help_text="Clerk who processed the original receipt",
                max_length=100,
                verbose_name="Legacy Processing Clerk",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="legacy_program_code",
            field=models.CharField(
                blank=True,
                help_text="Program code from legacy receipt",
                max_length=50,
                verbose_name="Legacy Program Code",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="legacy_receipt_full_id",
            field=models.CharField(
                blank=True,
                help_text="Full receipt ID from legacy system",
                max_length=200,
                verbose_name="Legacy Receipt Full ID",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="payer_name",
            field=models.CharField(
                blank=True, help_text="Name of person making payment", max_length=255, verbose_name="Payer Name"
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="payment_date",
            field=models.DateTimeField(help_text="When payment was made", verbose_name="Payment Date"),
        ),
        migrations.AlterField(
            model_name="payment",
            name="payment_method",
            field=models.CharField(
                choices=[
                    ("CASH", "Cash"),
                    ("CREDIT_CARD", "Credit Card"),
                    ("BANK_TRANSFER", "Bank Transfer"),
                    ("CHECK", "Check"),
                    ("ONLINE", "Online Payment"),
                    ("SCHOLARSHIP", "Scholarship"),
                    ("OTHER", "Other"),
                ],
                help_text="How payment was made",
                max_length=20,
                verbose_name="Payment Method",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="payment_reference",
            field=models.CharField(
                help_text="Unique payment reference number",
                max_length=50,
                unique=True,
                verbose_name="Payment Reference",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="processed_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who processed this payment",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="processed_payments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Processed By",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="processed_date",
            field=models.DateTimeField(
                blank=True, help_text="When payment was processed", null=True, verbose_name="Processed Date"
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending"),
                    ("COMPLETED", "Completed"),
                    ("FAILED", "Failed"),
                    ("CANCELLED", "Cancelled"),
                    ("REFUNDED", "Refunded"),
                ],
                default="PENDING",
                help_text="Current payment status",
                max_length=20,
                verbose_name="Status",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="approved_adjustments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="gl_account",
            field=models.ForeignKey(
                blank=True,
                help_text="Reconciliation GL account (e.g., 9999-RECON)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="finance.glaccount",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="journal_entry",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="finance.journalentry"
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="payment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reconciliation_adjustments",
                to="finance.payment",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="reconciliation_batch",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="adjustments",
                to="finance.reconciliationbatch",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="reconciliation_status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="adjustments",
                to="finance.reconciliationstatus",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="student",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="people.studentprofile"
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="term",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="curriculum.term"
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationadjustment",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationbatch",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationbatch",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationrule",
            name="confidence_threshold",
            field=models.DecimalField(
                decimal_places=2,
                default=80.0,
                max_digits=5,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
                verbose_name="Confidence Threshold",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationrule",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationrule",
            name="description",
            field=models.TextField(
                help_text="Detailed description of what this rule does", verbose_name="Description"
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationrule",
            name="parameters",
            field=models.JSONField(default=dict, help_text="Rule-specific parameters", verbose_name="Parameters"),
        ),
        migrations.AlterField(
            model_name="reconciliationrule",
            name="priority",
            field=models.PositiveSmallIntegerField(
                default=100, help_text="Lower numbers = higher priority", verbose_name="Priority"
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationrule",
            name="rule_type",
            field=models.CharField(
                choices=[
                    ("AMOUNT_TOL", "Amount Tolerance"),
                    ("DATE_RANGE", "Date Range Matching"),
                    ("PATTERN", "Pattern Matching"),
                    ("HISTORY", "Student History"),
                    ("COURSE_COMBO", "Course Combination"),
                ],
                max_length=20,
                verbose_name="Rule Type",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationrule",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="confidence_score",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Numeric confidence score (0-100)",
                max_digits=5,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
                verbose_name="Confidence Score",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="matched_enrollments",
            field=models.ManyToManyField(
                blank=True, related_name="reconciliation_matches", to="enrollment.classheaderenrollment"
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="payment",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name="reconciliation_status", to="finance.payment"
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="reconciled_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="reconciliations_performed",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="reconciliation_batch",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reconciliation_statuses",
                to="finance.reconciliationbatch",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="status",
            field=models.CharField(
                choices=[
                    ("FULLY_RECONCILED", "Fully Reconciled"),
                    ("AUTO_ALLOCATED", "Auto-Allocated"),
                    ("PENDING_REVIEW", "Pending Review"),
                    ("EXCEPTION_ERROR", "Exception/Error"),
                    ("UNMATCHED", "Unmatched"),
                ],
                default="UNMATCHED",
                max_length=20,
                verbose_name="Status",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="reconciliationstatus",
            name="variance_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                help_text="Difference between expected and actual",
                max_digits=10,
                verbose_name="Variance Amount",
            ),
        ),
        migrations.AlterField(
            model_name="reconstructionscholarshipentry",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Date and time when the record was created", verbose_name="Created at"
            ),
        ),
        migrations.AlterField(
            model_name="reconstructionscholarshipentry",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AlterField(
            model_name="reconstructionscholarshipentry",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, help_text="Date and time when the record was last updated", verbose_name="Updated at"
            ),
        ),
        migrations.AlterField(
            model_name="reconstructionscholarshipentry",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AlterField(
            model_name="seniorprojectpricing",
            name="tier",
            field=models.CharField(
                choices=[("1", "1 Student"), ("2", "2 Students"), ("3-4", "3-4 Students"), ("5", "5 Students")],
                help_text="Student group size tier",
                max_length=10,
                verbose_name="Group Size Tier",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="clerkidentification",
            unique_together={("clerk_name", "computer_identifier")},
        ),
        migrations.AlterUniqueTogether(
            name="reconstructionscholarshipentry",
            unique_together={("student", "term", "scholarship_type")},
        ),
        migrations.AddIndex(
            model_name="cashiersession",
            index=models.Index(fields=["cashier", "opened_at"], name="finance_cas_cashier_363338_idx"),
        ),
        migrations.AddIndex(
            model_name="cashiersession",
            index=models.Index(fields=["is_active"], name="finance_cas_is_acti_d90ec7_idx"),
        ),
        migrations.AddIndex(
            model_name="feepricing",
            index=models.Index(fields=["fee_type", "effective_date"], name="finance_fee_fee_typ_4dd263_idx"),
        ),
        migrations.AddIndex(
            model_name="feepricing",
            index=models.Index(
                fields=["is_mandatory", "is_per_course", "is_per_term"], name="finance_fee_is_mand_a2cb82_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="financialtransaction",
            index=models.Index(fields=["student", "transaction_date"], name="finance_fin_student_b03c6e_idx"),
        ),
        migrations.AddIndex(
            model_name="financialtransaction",
            index=models.Index(fields=["transaction_type", "transaction_date"], name="finance_fin_transac_5bf1ec_idx"),
        ),
        migrations.AddIndex(
            model_name="financialtransaction",
            index=models.Index(fields=["invoice"], name="finance_fin_invoice_c661ca_idx"),
        ),
        migrations.AddIndex(
            model_name="financialtransaction",
            index=models.Index(fields=["payment"], name="finance_fin_payment_a05753_idx"),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["student", "term"], name="finance_inv_student_5cd977_idx"),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["issue_date"], name="finance_inv_issue_d_3b7e1d_idx"),
        ),
        migrations.AddIndex(
            model_name="legacyreceiptmapping",
            index=models.Index(fields=["legacy_ipk"], name="finance_leg_legacy__c43b49_idx"),
        ),
        migrations.AddIndex(
            model_name="legacyreceiptmapping",
            index=models.Index(
                fields=["legacy_receipt_number", "legacy_term_id"], name="finance_leg_legacy__933ece_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["payment_date"], name="finance_pay_payment_72f761_idx"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["status"], name="finance_pay_status_cb601d_idx"),
        ),
        migrations.AddConstraint(
            model_name="feepricing",
            constraint=models.UniqueConstraint(fields=("name", "effective_date"), name="unique_fee_per_name_date"),
        ),
        migrations.AlterModelTable(
            name="cashiersession",
            table="finance_cashier_session",
        ),
        migrations.AlterModelTable(
            name="coursefixedpricing",
            table="finance_course_fixed_pricing",
        ),
        migrations.AlterModelTable(
            name="defaultpricing",
            table="finance_default_pricing",
        ),
        migrations.AlterModelTable(
            name="feeglmapping",
            table="finance_fee_gl_mapping",
        ),
        migrations.AlterModelTable(
            name="feepricing",
            table="finance_fee_pricing",
        ),
        migrations.AlterModelTable(
            name="financialtransaction",
            table="finance_financialtransaction",
        ),
        migrations.AlterModelTable(
            name="glaccount",
            table="finance_gl_account",
        ),
        migrations.AlterModelTable(
            name="glbatch",
            table="finance_gl_batch",
        ),
        migrations.AlterModelTable(
            name="invoice",
            table="finance_invoice",
        ),
        migrations.AlterModelTable(
            name="invoicelineitem",
            table="finance_invoice_line_item",
        ),
        migrations.AlterModelTable(
            name="journalentry",
            table="finance_journal_entry",
        ),
        migrations.AlterModelTable(
            name="journalentryline",
            table="finance_journal_entry_line",
        ),
        migrations.AlterModelTable(
            name="payment",
            table="finance_payment",
        ),
        migrations.AlterModelTable(
            name="readingclasspricing",
            table="finance_reading_class_pricing",
        ),
        migrations.AlterModelTable(
            name="seniorprojectcourse",
            table="finance_senior_project_course",
        ),
        migrations.AlterModelTable(
            name="seniorprojectpricing",
            table="finance_senior_project_pricing",
        ),
        migrations.DeleteModel(
            name="CoursePricing",
        ),
        migrations.DeleteModel(
            name="PricingTier",
        ),
        migrations.DeleteModel(
            name="TermPricingAdjustment",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="closing_cash",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="closing_time",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="date",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="expected_cash",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="opening_cash",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="opening_time",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="status",
        ),
        migrations.RemoveField(
            model_name="cashiersession",
            name="variance",
        ),
    ]
