# Generated by Django 5.2.5 on 2025-08-11 10:41

from django.db import migrations


class Migration(migrations.Migration):
    """
    Add database indexes for DRY Smart Discovery Filtering System performance.

    This migration adds indexes to support efficient filtering across student data,
    reducing query load from 18K+ to ~2K students with smart defaults.

    Indexes added:
    - StudentProfile: current_status, last_enrollment_date, study_time_preference
    - Person: date_of_birth for age-based filtering
    - Enrollment tables: enrollment_date, status for activity scope filtering
    """

    # Disable atomic transactions for concurrent index creation
    atomic = False

    dependencies = [
        ("people", "0001_initial"),  # Assuming people app has initial migration
        ("enrollment", "0001_initial"),  # Assuming enrollment app has initial migration
    ]

    operations = [
        # StudentProfile indexes for common filter fields
        migrations.RunSQL(
            sql="""
                CREATE INDEX CONCURRENTLY IF NOT EXISTS people_studentprofile_status_enrollment_date_idx
                ON people_studentprofile (current_status, last_enrollment_date DESC);
            """,
            reverse_sql="""
                DROP INDEX CONCURRENTLY IF EXISTS people_studentprofile_status_enrollment_date_idx;
            """,
        ),
        migrations.RunSQL(
            sql="""
                CREATE INDEX CONCURRENTLY IF NOT EXISTS people_studentprofile_study_time_status_idx
                ON people_studentprofile (study_time_preference, current_status);
            """,
            reverse_sql="""
                DROP INDEX CONCURRENTLY IF EXISTS people_studentprofile_study_time_status_idx;
            """,
        ),
        # Person indexes for demographics and search
        migrations.RunSQL(
            sql="""
                CREATE INDEX CONCURRENTLY IF NOT EXISTS people_person_birth_date_age_idx
                ON people_person (date_of_birth) WHERE date_of_birth IS NOT NULL;
            """,
            reverse_sql="""
                DROP INDEX CONCURRENTLY IF EXISTS people_person_birth_date_age_idx;
            """,
        ),
        migrations.RunSQL(
            sql="""
                CREATE INDEX CONCURRENTLY IF NOT EXISTS people_person_name_search_idx
                ON people_person (family_name, personal_name, full_name);
            """,
            reverse_sql="""
                DROP INDEX CONCURRENTLY IF EXISTS people_person_name_search_idx;
            """,
        ),
        # Program enrollment indexes for activity scope filtering
        migrations.RunSQL(
            sql="""
                CREATE INDEX CONCURRENTLY IF NOT EXISTS enrollment_programenrollment_activity_scope_idx
                ON enrollment_programenrollment (student_id, start_date DESC, status);
            """,
            reverse_sql="""
                DROP INDEX CONCURRENTLY IF EXISTS enrollment_programenrollment_activity_scope_idx;
            """,
        ),
        migrations.RunSQL(
            sql="""
                CREATE INDEX CONCURRENTLY IF NOT EXISTS enrollment_classheaderenrollment_activity_scope_idx
                ON enrollment_classheaderenrollment (student_id, enrollment_date DESC, status);
            """,
            reverse_sql="""
                DROP INDEX CONCURRENTLY IF EXISTS enrollment_classheaderenrollment_activity_scope_idx;
            """,
        ),
        # Composite index for smart default filtering (recent active students)
        migrations.RunSQL(
            sql="""
                CREATE INDEX CONCURRENTLY IF NOT EXISTS people_studentprofile_smart_defaults_idx
                ON people_studentprofile (current_status, last_enrollment_date DESC, study_time_preference)
                WHERE current_status IN ('ACTIVE', 'INACTIVE');
            """,
            reverse_sql="""
                DROP INDEX CONCURRENTLY IF EXISTS people_studentprofile_smart_defaults_idx;
            """,
        ),
    ]
