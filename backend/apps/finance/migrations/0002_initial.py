# Generated by Django 5.2.5 on 2025-08-28 12:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic_records', '0002_initial'),
        ('curriculum', '0002_initial'),
        ('enrollment', '0002_initial'),
        ('finance', '0001_initial'),
        ('people', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='discountapplication',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_applications', to='people.studentprofile'),
        ),
        migrations.AddField(
            model_name='discountapplication',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_applications', to='curriculum.term'),
        ),
        migrations.AddField(
            model_name='discountapplication',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='discountrule',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='discountrule',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='discountapplication',
            name='discount_rule',
            field=models.ForeignKey(help_text='The rule that triggered this discount', on_delete=django.db.models.deletion.PROTECT, related_name='applications', to='finance.discountrule'),
        ),
        migrations.AddField(
            model_name='documentexcessfee',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='documentexcessfee',
            name='document_request',
            field=models.ForeignKey(help_text='Document request that triggered this excess fee', on_delete=django.db.models.deletion.PROTECT, related_name='excess_fees', to='academic_records.documentrequest', verbose_name='Document Request'),
        ),
        migrations.AddField(
            model_name='documentexcessfee',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='feeglmapping',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='feeglmapping',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='feepricing',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='feepricing',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='financialtransaction',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='financialtransaction',
            name='processed_by',
            field=models.ForeignKey(help_text='User who processed this transaction', on_delete=django.db.models.deletion.PROTECT, related_name='processed_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Processed By'),
        ),
        migrations.AddField(
            model_name='financialtransaction',
            name='student',
            field=models.ForeignKey(help_text='Student this transaction affects', on_delete=django.db.models.deletion.PROTECT, related_name='financial_transactions', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='financialtransaction',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='glaccount',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='glaccount',
            name='parent_account',
            field=models.ForeignKey(blank=True, help_text='Parent account for hierarchical reporting', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_accounts', to='finance.glaccount', verbose_name='Parent Account'),
        ),
        migrations.AddField(
            model_name='glaccount',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='feeglmapping',
            name='receivable_account',
            field=models.ForeignKey(blank=True, help_text='G/L account for unpaid fees (optional)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fee_receivable_mappings', to='finance.glaccount', verbose_name='Receivable Account'),
        ),
        migrations.AddField(
            model_name='feeglmapping',
            name='revenue_account',
            field=models.ForeignKey(help_text='G/L account for recording fee revenue', on_delete=django.db.models.deletion.PROTECT, related_name='fee_revenue_mappings', to='finance.glaccount', verbose_name='Revenue Account'),
        ),
        migrations.AddField(
            model_name='glbatch',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='glbatch',
            name='exported_by',
            field=models.ForeignKey(blank=True, help_text='User who exported this batch', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='gl_batches_exported', to=settings.AUTH_USER_MODEL, verbose_name='Exported By'),
        ),
        migrations.AddField(
            model_name='glbatch',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='reconstruction_batch',
            field=models.ForeignKey(blank=True, help_text='A/R reconstruction batch that created this invoice', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconstructed_invoices', to='finance.arreconstructionbatch'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='student',
            field=models.ForeignKey(help_text='Student this invoice is for', on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='term',
            field=models.ForeignKey(help_text='Academic term for this invoice', on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='curriculum.term', verbose_name='Term'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='financialtransaction',
            name='invoice',
            field=models.ForeignKey(blank=True, help_text='Related invoice (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='finance.invoice', verbose_name='Invoice'),
        ),
        migrations.AddField(
            model_name='discountapplication',
            name='invoice',
            field=models.ForeignKey(blank=True, help_text='Invoice this discount was applied to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_applications', to='finance.invoice'),
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='enrollment',
            field=models.ForeignKey(blank=True, help_text='Class enrollment this charge is for (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_line_items', to='enrollment.classheaderenrollment', verbose_name='Enrollment'),
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='fee_pricing',
            field=models.ForeignKey(blank=True, help_text='Fee pricing record this charge is based on', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_line_items', to='finance.feepricing', verbose_name='Fee Pricing'),
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='finance.invoice', verbose_name='Invoice'),
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='documentexcessfee',
            name='invoice_line_item',
            field=models.ForeignKey(help_text='Invoice line item for this excess fee', on_delete=django.db.models.deletion.CASCADE, related_name='document_excess_fees', to='finance.invoicelineitem', verbose_name='Invoice Line Item'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='approved_by',
            field=models.ForeignKey(blank=True, help_text='User who approved this entry', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='journal_entries_approved', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='prepared_by',
            field=models.ForeignKey(help_text='User who prepared this entry', on_delete=django.db.models.deletion.PROTECT, related_name='journal_entries_prepared', to=settings.AUTH_USER_MODEL, verbose_name='Prepared By'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='reverses_entry',
            field=models.ForeignKey(blank=True, help_text='Original entry being reversed', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reversal_entries', to='finance.journalentry', verbose_name='Reverses Entry'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='journalentryline',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='journalentryline',
            name='gl_account',
            field=models.ForeignKey(help_text='General ledger account', on_delete=django.db.models.deletion.PROTECT, related_name='journal_lines', to='finance.glaccount', verbose_name='G/L Account'),
        ),
        migrations.AddField(
            model_name='journalentryline',
            name='journal_entry',
            field=models.ForeignKey(help_text='Parent journal entry', on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='finance.journalentry', verbose_name='Journal Entry'),
        ),
        migrations.AddField(
            model_name='journalentryline',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='legacyreceiptmapping',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='legacyreceiptmapping',
            name='generated_invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legacy_mappings', to='finance.invoice'),
        ),
        migrations.AddField(
            model_name='legacyreceiptmapping',
            name='reconstruction_batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='finance.arreconstructionbatch'),
        ),
        migrations.AddField(
            model_name='legacyreceiptmapping',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='materialitythreshold',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='materialitythreshold',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='payment',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='payment',
            name='invoice',
            field=models.ForeignKey(help_text='Invoice this payment is for', on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='finance.invoice', verbose_name='Invoice'),
        ),
        migrations.AddField(
            model_name='payment',
            name='processed_by',
            field=models.ForeignKey(blank=True, help_text='User who processed this payment', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='processed_payments', to=settings.AUTH_USER_MODEL, verbose_name='Processed By'),
        ),
        migrations.AddField(
            model_name='payment',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='legacyreceiptmapping',
            name='generated_payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legacy_mappings', to='finance.payment'),
        ),
        migrations.AddField(
            model_name='financialtransaction',
            name='payment',
            field=models.ForeignKey(blank=True, help_text='Related payment (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='finance.payment', verbose_name='Payment'),
        ),
        migrations.AddField(
            model_name='discountapplication',
            name='payment',
            field=models.ForeignKey(blank=True, help_text='Payment associated with this discount', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_applications', to='finance.payment'),
        ),
        migrations.AddField(
            model_name='paymentconfiguration',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='paymentconfiguration',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='readingclasspricing',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='readingclasspricing',
            name='cycle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reading_class_pricing', to='curriculum.cycle', verbose_name='Cycle'),
        ),
        migrations.AddField(
            model_name='readingclasspricing',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_adjustments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='gl_account',
            field=models.ForeignKey(blank=True, help_text='Reconciliation GL account (e.g., 9999-RECON)', null=True, on_delete=django.db.models.deletion.PROTECT, to='finance.glaccount'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='journal_entry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='finance.journalentry'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconciliation_adjustments', to='finance.payment'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='people.studentprofile'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='curriculum.term'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='reconciliationbatch',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='reconciliationbatch',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='reconciliation_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adjustments', to='finance.reconciliationbatch'),
        ),
        migrations.AddField(
            model_name='reconciliationrule',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='reconciliationrule',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='reconciliationstatus',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='reconciliationstatus',
            name='matched_enrollments',
            field=models.ManyToManyField(blank=True, related_name='reconciliation_matches', to='enrollment.classheaderenrollment'),
        ),
        migrations.AddField(
            model_name='reconciliationstatus',
            name='payment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reconciliation_status', to='finance.payment'),
        ),
        migrations.AddField(
            model_name='reconciliationstatus',
            name='reconciled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reconciliations_performed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reconciliationstatus',
            name='reconciliation_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconciliation_statuses', to='finance.reconciliationbatch'),
        ),
        migrations.AddField(
            model_name='reconciliationstatus',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='reconciliationadjustment',
            name='reconciliation_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='finance.reconciliationstatus'),
        ),
        migrations.AddField(
            model_name='reconstructionscholarshipentry',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='reconstructionscholarshipentry',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconstruction_scholarship_entries', to='people.studentprofile'),
        ),
        migrations.AddField(
            model_name='reconstructionscholarshipentry',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconstruction_scholarship_entries', to='curriculum.term'),
        ),
        migrations.AddField(
            model_name='reconstructionscholarshipentry',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='seniorprojectcourse',
            name='course',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='senior_project_config', to='curriculum.course', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='seniorprojectcourse',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='seniorprojectcourse',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='seniorprojectpricing',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='seniorprojectpricing',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddIndex(
            model_name='administrativefeeconfig',
            index=models.Index(fields=['cycle_type', 'is_active'], name='finance_adm_cycle_t_6b5d86_idx'),
        ),
        migrations.AddIndex(
            model_name='administrativefeeconfig',
            index=models.Index(fields=['effective_date'], name='finance_adm_effecti_2c5a2c_idx'),
        ),
        migrations.AddIndex(
            model_name='administrativefeeconfig',
            index=models.Index(fields=['cycle_type', 'effective_date'], name='finance_adm_cycle_t_dbfdcf_idx'),
        ),
        migrations.AddIndex(
            model_name='arreconstructionbatch',
            index=models.Index(fields=['status', 'created_at'], name='finance_ar__status_e5d34d_idx'),
        ),
        migrations.AddIndex(
            model_name='arreconstructionbatch',
            index=models.Index(fields=['term_id', 'processing_mode'], name='finance_ar__term_id_b0bd33_idx'),
        ),
        migrations.AddIndex(
            model_name='cashiersession',
            index=models.Index(fields=['cashier', 'opened_at'], name='finance_cas_cashier_363338_idx'),
        ),
        migrations.AddIndex(
            model_name='cashiersession',
            index=models.Index(fields=['is_active'], name='finance_cas_is_acti_d90ec7_idx'),
        ),
        migrations.AddIndex(
            model_name='clerkidentification',
            index=models.Index(fields=['clerk_name'], name='finance_cle_clerk_n_f3392c_idx'),
        ),
        migrations.AddIndex(
            model_name='clerkidentification',
            index=models.Index(fields=['verified_by_user'], name='finance_cle_verifie_9c3976_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clerkidentification',
            unique_together={('clerk_name', 'computer_identifier')},
        ),
        migrations.AddIndex(
            model_name='coursefixedpricing',
            index=models.Index(fields=['course', 'effective_date'], name='finance_cou_course__d106ae_idx'),
        ),
        migrations.AddIndex(
            model_name='coursefixedpricing',
            index=models.Index(fields=['effective_date', 'end_date'], name='finance_cou_effecti_3d75c1_idx'),
        ),
        migrations.AddConstraint(
            model_name='coursefixedpricing',
            constraint=models.UniqueConstraint(fields=('course', 'effective_date'), name='unique_fixed_per_course_date'),
        ),
        migrations.AddConstraint(
            model_name='coursefixedpricing',
            constraint=models.UniqueConstraint(condition=models.Q(('end_date__isnull', True)), fields=('course',), name='unique_current_fixed_per_course'),
        ),
        migrations.AddIndex(
            model_name='defaultpricing',
            index=models.Index(fields=['cycle', 'effective_date'], name='finance_def_cycle_i_c98ae8_idx'),
        ),
        migrations.AddIndex(
            model_name='defaultpricing',
            index=models.Index(fields=['effective_date', 'end_date'], name='finance_def_effecti_2140ff_idx'),
        ),
        migrations.AddConstraint(
            model_name='defaultpricing',
            constraint=models.UniqueConstraint(fields=('cycle', 'effective_date'), name='unique_default_per_cycle_date'),
        ),
        migrations.AddConstraint(
            model_name='defaultpricing',
            constraint=models.UniqueConstraint(condition=models.Q(('end_date__isnull', True)), fields=('cycle',), name='unique_current_default_per_cycle'),
        ),
        migrations.AddIndex(
            model_name='discountrule',
            index=models.Index(fields=['rule_type', 'is_active'], name='finance_dis_rule_ty_9d1c33_idx'),
        ),
        migrations.AddIndex(
            model_name='discountrule',
            index=models.Index(fields=['pattern_text'], name='finance_dis_pattern_932c26_idx'),
        ),
        migrations.AddIndex(
            model_name='feepricing',
            index=models.Index(fields=['fee_type', 'effective_date'], name='finance_fee_fee_typ_4dd263_idx'),
        ),
        migrations.AddIndex(
            model_name='feepricing',
            index=models.Index(fields=['effective_date', 'end_date'], name='finance_fee_effecti_3fe76b_idx'),
        ),
        migrations.AddIndex(
            model_name='feepricing',
            index=models.Index(fields=['is_mandatory', 'is_per_course', 'is_per_term', 'is_per_document'], name='finance_fee_is_mand_89d497_idx'),
        ),
        migrations.AddConstraint(
            model_name='feepricing',
            constraint=models.UniqueConstraint(fields=('name', 'effective_date'), name='unique_fee_per_name_date'),
        ),
        migrations.AddIndex(
            model_name='glaccount',
            index=models.Index(fields=['account_type', 'account_category'], name='finance_gl__account_e15104_idx'),
        ),
        migrations.AddIndex(
            model_name='glaccount',
            index=models.Index(fields=['is_active'], name='finance_gl__is_acti_1ebe5f_idx'),
        ),
        migrations.AddIndex(
            model_name='glaccount',
            index=models.Index(fields=['parent_account'], name='finance_gl__parent__f71e35_idx'),
        ),
        migrations.AddIndex(
            model_name='feeglmapping',
            index=models.Index(fields=['fee_code', 'effective_date'], name='finance_fee_fee_cod_c7d613_idx'),
        ),
        migrations.AddIndex(
            model_name='feeglmapping',
            index=models.Index(fields=['fee_type'], name='finance_fee_fee_typ_3b84d1_idx'),
        ),
        migrations.AddIndex(
            model_name='feeglmapping',
            index=models.Index(fields=['revenue_account'], name='finance_fee_revenue_afe0d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feeglmapping',
            unique_together={('fee_code', 'effective_date')},
        ),
        migrations.AddIndex(
            model_name='glbatch',
            index=models.Index(fields=['accounting_period', 'status'], name='finance_gl__account_9b25c4_idx'),
        ),
        migrations.AddIndex(
            model_name='glbatch',
            index=models.Index(fields=['status', 'batch_date'], name='finance_gl__status_fd9dc2_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['student', 'term'], name='finance_inv_student_5cd977_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status', 'due_date'], name='finance_inv_status_0e2dc8_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['issue_date'], name='finance_inv_issue_d_3b7e1d_idx'),
        ),
        migrations.AddIndex(
            model_name='documentexcessfee',
            index=models.Index(fields=['invoice_line_item'], name='finance_doc_invoice_0d2045_idx'),
        ),
        migrations.AddIndex(
            model_name='documentexcessfee',
            index=models.Index(fields=['document_request'], name='finance_doc_documen_7d576f_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['accounting_period', 'status'], name='finance_jou_account_d94d63_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['entry_type', 'entry_date'], name='finance_jou_entry_t_9bfe83_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['batch_id'], name='finance_jou_batch_i_3ed353_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['status', 'posted_date'], name='finance_jou_status_455589_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentryline',
            index=models.Index(fields=['gl_account', 'journal_entry'], name='finance_jou_gl_acco_111997_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentryline',
            index=models.Index(fields=['reference_type', 'reference_id'], name='finance_jou_referen_f83db1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='journalentryline',
            unique_together={('journal_entry', 'line_number')},
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['invoice', 'status'], name='finance_pay_invoice_80fc36_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_date'], name='finance_pay_payment_72f761_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='finance_pay_status_cb601d_idx'),
        ),
        migrations.AddIndex(
            model_name='legacyreceiptmapping',
            index=models.Index(fields=['legacy_ipk'], name='finance_leg_legacy__c43b49_idx'),
        ),
        migrations.AddIndex(
            model_name='legacyreceiptmapping',
            index=models.Index(fields=['legacy_receipt_number', 'legacy_term_id'], name='finance_leg_legacy__933ece_idx'),
        ),
        migrations.AddIndex(
            model_name='legacyreceiptmapping',
            index=models.Index(fields=['legacy_student_id', 'legacy_term_id'], name='finance_leg_legacy__e32c59_idx'),
        ),
        migrations.AddIndex(
            model_name='legacyreceiptmapping',
            index=models.Index(fields=['validation_status'], name='finance_leg_validat_42825c_idx'),
        ),
        migrations.AddIndex(
            model_name='legacyreceiptmapping',
            index=models.Index(fields=['reconstruction_batch'], name='finance_leg_reconst_6a268e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='legacyreceiptmapping',
            unique_together={('legacy_ipk',)},
        ),
        migrations.AddIndex(
            model_name='financialtransaction',
            index=models.Index(fields=['student', 'transaction_date'], name='finance_fin_student_b03c6e_idx'),
        ),
        migrations.AddIndex(
            model_name='financialtransaction',
            index=models.Index(fields=['transaction_type', 'transaction_date'], name='finance_fin_transac_5bf1ec_idx'),
        ),
        migrations.AddIndex(
            model_name='financialtransaction',
            index=models.Index(fields=['invoice'], name='finance_fin_invoice_c661ca_idx'),
        ),
        migrations.AddIndex(
            model_name='financialtransaction',
            index=models.Index(fields=['payment'], name='finance_fin_payment_a05753_idx'),
        ),
        migrations.AddIndex(
            model_name='discountapplication',
            index=models.Index(fields=['student', 'term'], name='finance_dis_student_2bd163_idx'),
        ),
        migrations.AddIndex(
            model_name='discountapplication',
            index=models.Index(fields=['discount_rule', 'applied_date'], name='finance_dis_discoun_699413_idx'),
        ),
        migrations.AddIndex(
            model_name='discountapplication',
            index=models.Index(fields=['approval_status'], name='finance_dis_approva_569852_idx'),
        ),
        migrations.AddIndex(
            model_name='discountapplication',
            index=models.Index(fields=['legacy_receipt_ipk'], name='finance_dis_legacy__4e08c4_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentconfiguration',
            index=models.Index(fields=['method_type', 'is_enabled'], name='finance_pay_method__382695_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentconfiguration',
            index=models.Index(fields=['display_order'], name='finance_pay_display_9a3bed_idx'),
        ),
        migrations.AddIndex(
            model_name='readingclasspricing',
            index=models.Index(fields=['cycle', 'tier', 'effective_date'], name='finance_rea_cycle_i_eb517c_idx'),
        ),
        migrations.AddIndex(
            model_name='readingclasspricing',
            index=models.Index(fields=['effective_date', 'end_date'], name='finance_rea_effecti_752d2c_idx'),
        ),
        migrations.AddConstraint(
            model_name='readingclasspricing',
            constraint=models.UniqueConstraint(fields=('cycle', 'tier', 'effective_date'), name='unique_reading_per_cycle_tier_date'),
        ),
        migrations.AddConstraint(
            model_name='readingclasspricing',
            constraint=models.UniqueConstraint(condition=models.Q(('end_date__isnull', True)), fields=('cycle', 'tier'), name='unique_current_reading_per_cycle_tier'),
        ),
        migrations.AddIndex(
            model_name='reconciliationbatch',
            index=models.Index(fields=['status', 'created_at'], name='finance_rec_status_867ff7_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationbatch',
            index=models.Index(fields=['batch_type', 'created_at'], name='finance_rec_batch_t_905868_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationrule',
            index=models.Index(fields=['is_active', 'priority'], name='finance_rec_is_acti_e5d245_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationrule',
            index=models.Index(fields=['rule_type', 'is_active'], name='finance_rec_rule_ty_8c712f_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationstatus',
            index=models.Index(fields=['status', 'confidence_score'], name='finance_rec_status_59a4fd_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationstatus',
            index=models.Index(fields=['last_attempt_date'], name='finance_rec_last_at_862647_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationstatus',
            index=models.Index(fields=['reconciliation_batch'], name='finance_rec_reconci_92d1ea_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationadjustment',
            index=models.Index(fields=['adjustment_type', 'created_at'], name='finance_rec_adjustm_8b3e44_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationadjustment',
            index=models.Index(fields=['student', 'term'], name='finance_rec_student_22fd26_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationadjustment',
            index=models.Index(fields=['reconciliation_batch'], name='finance_rec_reconci_3999e3_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationadjustment',
            index=models.Index(fields=['requires_approval', 'approved_date'], name='finance_rec_require_353e26_idx'),
        ),
        migrations.AddIndex(
            model_name='reconstructionscholarshipentry',
            index=models.Index(fields=['requires_reprocessing'], name='finance_rec_require_219c8d_idx'),
        ),
        migrations.AddIndex(
            model_name='reconstructionscholarshipentry',
            index=models.Index(fields=['discovered_from_receipt'], name='finance_rec_discove_2550ba_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reconstructionscholarshipentry',
            unique_together={('student', 'term', 'scholarship_type')},
        ),
        migrations.AddIndex(
            model_name='seniorprojectpricing',
            index=models.Index(fields=['tier', 'effective_date'], name='finance_sen_tier_08fee1_idx'),
        ),
        migrations.AddIndex(
            model_name='seniorprojectpricing',
            index=models.Index(fields=['effective_date', 'end_date'], name='finance_sen_effecti_904fdc_idx'),
        ),
        migrations.AddConstraint(
            model_name='seniorprojectpricing',
            constraint=models.UniqueConstraint(fields=('tier', 'effective_date'), name='unique_senior_project_tier_date'),
        ),
        migrations.AddConstraint(
            model_name='seniorprojectpricing',
            constraint=models.UniqueConstraint(condition=models.Q(('end_date__isnull', True)), fields=('tier',), name='unique_current_senior_project_tier'),
        ),
    ]
