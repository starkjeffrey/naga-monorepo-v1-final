# Generated by Django 5.2.5 on 2025-08-28 12:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('curriculum', '0002_initial'),
        ('enrollment', '0002_initial'),
        ('grading', '0001_initial'),
        ('people', '0001_initial'),
        ('scheduling', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='classpartgrade',
            name='class_part',
            field=models.ForeignKey(help_text='Class component this grade is for', on_delete=django.db.models.deletion.CASCADE, related_name='class_part_grades', to='scheduling.classpart', verbose_name='Class Part'),
        ),
        migrations.AddField(
            model_name='classpartgrade',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='classpartgrade',
            name='enrollment',
            field=models.ForeignKey(help_text='Student enrollment this grade belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='class_part_grades', to='enrollment.classheaderenrollment', verbose_name='Enrollment'),
        ),
        migrations.AddField(
            model_name='classpartgrade',
            name='entered_by',
            field=models.ForeignKey(help_text='User who entered this grade', on_delete=django.db.models.deletion.PROTECT, related_name='entered_class_part_grades', to=settings.AUTH_USER_MODEL, verbose_name='Entered By'),
        ),
        migrations.AddField(
            model_name='classpartgrade',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='classsessiongrade',
            name='class_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_session_grades', to='scheduling.classsession', verbose_name='Class Session'),
        ),
        migrations.AddField(
            model_name='classsessiongrade',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='classsessiongrade',
            name='enrollment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_session_grades', to='enrollment.classheaderenrollment', verbose_name='Enrollment'),
        ),
        migrations.AddField(
            model_name='classsessiongrade',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='gparecord',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='gparecord',
            name='major',
            field=models.ForeignKey(help_text='Major this GPA calculation is based on', on_delete=django.db.models.deletion.CASCADE, related_name='gpa_records', to='curriculum.major', verbose_name='Major'),
        ),
        migrations.AddField(
            model_name='gparecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gpa_records', to='people.studentprofile', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='gparecord',
            name='term',
            field=models.ForeignKey(help_text='Term this GPA calculation is for', on_delete=django.db.models.deletion.CASCADE, related_name='gpa_records', to='curriculum.term', verbose_name='Term'),
        ),
        migrations.AddField(
            model_name='gparecord',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='gradechangehistory',
            name='changed_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grade_changes', to=settings.AUTH_USER_MODEL, verbose_name='Changed By'),
        ),
        migrations.AddField(
            model_name='gradechangehistory',
            name='class_part_grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_history', to='grading.classpartgrade', verbose_name='Class Part Grade'),
        ),
        migrations.AddField(
            model_name='gradechangehistory',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='gradechangehistory',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='gradeconversion',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='gradeconversion',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='gradingscale',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='gradingscale',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='gradeconversion',
            name='grading_scale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_conversions', to='grading.gradingscale', verbose_name='Grading Scale'),
        ),
        migrations.AddIndex(
            model_name='classpartgrade',
            index=models.Index(fields=['enrollment', 'grade_status'], name='grading_cla_enrollm_e3e50f_idx'),
        ),
        migrations.AddIndex(
            model_name='classpartgrade',
            index=models.Index(fields=['class_part', 'grade_status'], name='grading_cla_class_p_1f9927_idx'),
        ),
        migrations.AddIndex(
            model_name='classpartgrade',
            index=models.Index(fields=['entered_at'], name='grading_cla_entered_6fa7d9_idx'),
        ),
        migrations.AddIndex(
            model_name='classpartgrade',
            index=models.Index(fields=['student_notified'], name='grading_cla_student_81c2bf_idx'),
        ),
        migrations.AddIndex(
            model_name='classpartgrade',
            index=models.Index(fields=['grade_source', 'grade_status'], name='grading_cla_grade_s_450aa9_idx'),
        ),
        migrations.AddIndex(
            model_name='classpartgrade',
            index=models.Index(fields=['entered_by', 'entered_at'], name='grading_cla_entered_58d5c5_idx'),
        ),
        migrations.AddIndex(
            model_name='classpartgrade',
            index=models.Index(fields=['enrollment', 'class_part', 'grade_status'], name='grading_cla_enrollm_75e4d6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='classpartgrade',
            unique_together={('enrollment', 'class_part')},
        ),
        migrations.AddIndex(
            model_name='classsessiongrade',
            index=models.Index(fields=['enrollment', 'calculated_at'], name='grading_cla_enrollm_2008d4_idx'),
        ),
        migrations.AddIndex(
            model_name='classsessiongrade',
            index=models.Index(fields=['class_session'], name='grading_cla_class_s_960773_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='classsessiongrade',
            unique_together={('enrollment', 'class_session')},
        ),
        migrations.AddIndex(
            model_name='gparecord',
            index=models.Index(fields=['student', 'term'], name='grading_gpa_student_a14604_idx'),
        ),
        migrations.AddIndex(
            model_name='gparecord',
            index=models.Index(fields=['major', 'term'], name='grading_gpa_major_i_6cbe6a_idx'),
        ),
        migrations.AddIndex(
            model_name='gparecord',
            index=models.Index(fields=['gpa_type', '-calculated_at'], name='grading_gpa_gpa_typ_7f207d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gparecord',
            unique_together={('student', 'term', 'major', 'gpa_type')},
        ),
        migrations.AddIndex(
            model_name='gradechangehistory',
            index=models.Index(fields=['class_part_grade', '-changed_at'], name='grading_gra_class_p_41271a_idx'),
        ),
        migrations.AddIndex(
            model_name='gradechangehistory',
            index=models.Index(fields=['changed_by', '-changed_at'], name='grading_gra_changed_756863_idx'),
        ),
        migrations.AddIndex(
            model_name='gradechangehistory',
            index=models.Index(fields=['change_type', '-changed_at'], name='grading_gra_change__eb2392_idx'),
        ),
        migrations.AddIndex(
            model_name='gradingscale',
            index=models.Index(fields=['scale_type', 'is_active'], name='grading_gra_scale_t_8260fd_idx'),
        ),
        migrations.AddIndex(
            model_name='gradeconversion',
            index=models.Index(fields=['grading_scale', 'display_order'], name='grading_gra_grading_391d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='gradeconversion',
            index=models.Index(fields=['letter_grade'], name='grading_gra_letter__699b47_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gradeconversion',
            unique_together={('grading_scale', 'letter_grade'), ('grading_scale', 'max_percentage'), ('grading_scale', 'min_percentage')},
        ),
    ]
