# Generated by Django 5.2.4 on 2025-07-31 02:57

import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("curriculum", "0007_add_senior_project_group"),
        ("enrollment", "0006_academicjourney_academicprogression_and_more"),
        ("people", "0009_alter_studentphoto_managers_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="SeniorProjectGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="Updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this record has been soft deleted",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was marked as deleted",
                        null=True,
                        verbose_name="Deleted at",
                    ),
                ),
                (
                    "project_title",
                    models.CharField(
                        help_text="Working title of the senior project", max_length=255, verbose_name="Project Title"
                    ),
                ),
                (
                    "final_title",
                    models.CharField(
                        blank=True,
                        help_text="Final title of the completed research paper",
                        max_length=255,
                        verbose_name="Final Paper Title",
                    ),
                ),
                (
                    "project_description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of the project scope and objectives",
                        verbose_name="Project Description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PROPOSED", "Proposed"),
                            ("APPROVED", "Approved"),
                            ("IN_PROGRESS", "In Progress"),
                            ("SUBMITTED", "Submitted"),
                            ("DEFENDED", "Defended"),
                            ("COMPLETED", "Completed"),
                            ("WITHDRAWN", "Withdrawn"),
                        ],
                        db_index=True,
                        default="PROPOSED",
                        help_text="Current status of the project",
                        max_length=20,
                        verbose_name="Project Status",
                    ),
                ),
                (
                    "proposal_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when project proposal was submitted",
                        null=True,
                        verbose_name="Proposal Date",
                    ),
                ),
                (
                    "approval_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when project was approved by advisor/committee",
                        null=True,
                        verbose_name="Approval Date",
                    ),
                ),
                (
                    "submission_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when final paper was submitted",
                        null=True,
                        verbose_name="Submission Date",
                    ),
                ),
                (
                    "defense_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of project defense/presentation",
                        null=True,
                        verbose_name="Defense Date",
                    ),
                ),
                (
                    "completion_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when project was officially completed",
                        null=True,
                        verbose_name="Completion Date",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when students were first registered for the senior project",
                        null=True,
                        verbose_name="Registration Date",
                    ),
                ),
                (
                    "graduation_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when students graduated (from CSV data)",
                        null=True,
                        verbose_name="Graduation Date",
                    ),
                ),
                (
                    "is_graduated",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the students in this group have graduated",
                        verbose_name="Is Graduated",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Administrative notes about the project", verbose_name="Notes"
                    ),
                ),
                (
                    "advisor",
                    models.ForeignKey(
                        help_text="Faculty member supervising this project",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="advised_senior_projects",
                        to="people.teacherprofile",
                        verbose_name="Faculty Advisor",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="Course this senior project is associated with",
                        limit_choices_to={"is_senior_project": True},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="senior_project_groups",
                        to="curriculum.course",
                        verbose_name="Senior Project Course",
                    ),
                ),
                (
                    "registration_term",
                    models.ForeignKey(
                        blank=True,
                        help_text="Term that contains the registration date (automatically determined)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="registered_senior_projects",
                        to="curriculum.term",
                        verbose_name="Registration Term",
                    ),
                ),
                (
                    "students",
                    models.ManyToManyField(
                        help_text="Students participating in this senior project (1-5 students)",
                        related_name="senior_project_groups",
                        to="people.studentprofile",
                        verbose_name="Group Members",
                    ),
                ),
                (
                    "term",
                    models.ForeignKey(
                        help_text="Term when this project is being conducted",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="senior_project_groups",
                        to="curriculum.term",
                        verbose_name="Term",
                    ),
                ),
            ],
            options={
                "verbose_name": "Senior Project Group",
                "verbose_name_plural": "Senior Project Groups",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["course", "term"], name="enrollment__course__1c30b3_idx"),
                    models.Index(fields=["status"], name="enrollment__status_65c556_idx"),
                    models.Index(fields=["advisor"], name="enrollment__advisor_ddc3be_idx"),
                ],
                "unique_together": {("course", "term", "project_title")},
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
    ]
