# Generated by Django 5.2.4 on 2025-07-18 12:37

import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MobileAuthAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="Updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this record has been soft deleted",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was marked as deleted",
                        null=True,
                        verbose_name="Deleted at",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address used in authentication attempt",
                        max_length=254,
                        verbose_name="Email",
                    ),
                ),
                (
                    "device_id",
                    models.CharField(
                        blank=True,
                        help_text="Device identifier if available",
                        max_length=255,
                        null=True,
                        verbose_name="Device ID",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address of the authentication attempt",
                        null=True,
                        verbose_name="IP Address",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="Browser/app user agent string",
                        null=True,
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SUCCESS", "Success"),
                            ("FAILED_INVALID_TOKEN", "Failed - Invalid Google Token"),
                            ("FAILED_INVALID_EMAIL", "Failed - Invalid Email Domain"),
                            ("FAILED_STUDENT_NOT_FOUND", "Failed - Student Not Found"),
                            ("FAILED_RATE_LIMITED", "Failed - Rate Limited"),
                        ],
                        help_text="Result of the authentication attempt",
                        max_length=30,
                        verbose_name="Status",
                    ),
                ),
                (
                    "student_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Student ID if authentication was successful",
                        null=True,
                        verbose_name="Student ID",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Detailed error message if authentication failed",
                        null=True,
                        verbose_name="Error Message",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mobile Auth Attempt",
                "verbose_name_plural": "Mobile Auth Attempts",
                "db_table": "mobile_auth_attempts",
                "indexes": [
                    models.Index(
                        fields=["email", "created_at"],
                        name="mobile_auth_email_2a1b25_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="mobile_auth_ip_addr_d3a308_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="mobile_auth_status_3463ad_idx",
                    ),
                ],
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="MobileAuthToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="Updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this record has been soft deleted",
                        verbose_name="Is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was marked as deleted",
                        null=True,
                        verbose_name="Deleted at",
                    ),
                ),
                (
                    "device_id",
                    models.CharField(
                        help_text="Unique identifier for the mobile device",
                        max_length=255,
                        verbose_name="Device ID",
                    ),
                ),
                (
                    "token_id",
                    models.CharField(
                        help_text="JWT token ID (jti claim)",
                        max_length=255,
                        unique=True,
                        verbose_name="Token ID",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When the token expires", verbose_name="Expires At"),
                ),
                (
                    "last_used",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the token was last used for an API call",
                        null=True,
                        verbose_name="Last Used",
                    ),
                ),
                (
                    "revoked",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the token has been revoked",
                        verbose_name="Revoked",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mobile_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mobile Auth Token",
                "verbose_name_plural": "Mobile Auth Tokens",
                "db_table": "mobile_auth_tokens",
                "indexes": [
                    models.Index(
                        fields=["user", "device_id"],
                        name="mobile_auth_user_id_db3f3e_idx",
                    ),
                    models.Index(fields=["token_id"], name="mobile_auth_token_i_3434c3_idx"),
                    models.Index(fields=["expires_at"], name="mobile_auth_expires_f9b8b6_idx"),
                ],
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
    ]
