{
  "name": "backend",
  "$schema": "../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "backend",
  "implicitDependencies": ["api-types"],
  "targets": {
    "dev": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml up django",
        "cwd": "backend"
      }
    },
    "serve": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml up django",
        "cwd": "backend"
      }
    },
    "serve:all": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml up",
        "cwd": "backend"
      }
    },
    "test": {
      "executor": "nx:run-commands",
      "options": {
        "command": "uv run pytest --cov=apps --cov-report=xml --cov-report=html --ignore=tests/test_merge_production_dotenvs_in_dotenv.py --ignore=.venv --ignore=venv --ignore=staticfiles apps/ -v --tb=short --maxfail=5",
        "cwd": "backend",
        "env": {
          "DJANGO_SETTINGS_MODULE": "config.settings.ci"
        }
      }
    },
    "test:docker": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm -e DJANGO_SETTINGS_MODULE=config.settings.test django pytest",
        "cwd": "backend"
      }
    },
    "test:unit": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm -e DJANGO_SETTINGS_MODULE=config.settings.test django pytest --lf",
        "cwd": "backend"
      }
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "command": "uv run ruff check apps/ config/ --exclude=scratchpad/ --exclude=tests/test_merge_production_dotenvs_in_dotenv.py",
        "cwd": "backend"
      }
    },
    "lint:docker": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm django ruff check",
        "cwd": "backend"
      }
    },
    "format": {
      "executor": "nx:run-commands",
      "options": {
        "command": "uv run black apps/ --line-length 119 --target-version py313 && uv run ruff format .",
        "cwd": "backend"
      }
    },
    "format:black": {
      "executor": "nx:run-commands",
      "options": {
        "command": "uv run black apps/ --line-length 119 --target-version py313",
        "cwd": "backend"
      }
    },
    "format:docker": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm django ruff format",
        "cwd": "backend"
      }
    },
    "typecheck": {
      "executor": "nx:run-commands",
      "options": {
        "command": "uv run mypy .",
        "cwd": "backend"
      }
    },
    "typecheck:docker": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm django mypy .",
        "cwd": "backend"
      }
    },
    "migrate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm django python manage.py migrate",
        "cwd": "backend"
      }
    },
    "migrate:both": {
      "executor": "nx:run-commands",
      "options": {
        "command": "just migrate-both",
        "cwd": "backend"
      }
    },
    "shell": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm django python manage.py shell",
        "cwd": "backend"
      }
    },
    "generate-schema": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml run --rm django python manage.py generate_openapi_schema --file openapi-schema.json",
        "cwd": "backend"
      }
    },
    "claude": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.local.yml --env-file .envs/.local/.claude -p naga_local_claude run --rm --service-ports -p 8001:8000 django /start",
        "cwd": "backend"
      }
    }
  },
  "tags": ["type:app", "scope:backend", "platform:server"]
}
