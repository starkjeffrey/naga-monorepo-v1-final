# Staff-Web V2 React Application Server Configuration
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers for the application
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.* wss://api.* https://*.amazonaws.com; frame-ancestors 'none';" always;
    add_header X-Robots-Tag "noindex, nofollow" always;

    # Disable access logs for health checks
    location = /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"staff-web-v2","timestamp":"$time_iso8601"}';
    }

    # Serve static assets with optimal caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";

        # Enable compression
        gzip_static on;

        # Rate limiting for static assets
        limit_req zone=static burst=20 nodelay;

        # Security headers for static assets
        add_header X-Frame-Options "DENY";
        add_header X-XSS-Protection "1; mode=block";
    }

    # Special handling for service worker
    location = /sw.js {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # API proxy configuration (if needed for development)
    location /api/ {
        # This would typically proxy to Django backend
        # In production, this is handled by Traefik
        return 302 https://api.$host$request_uri;
    }

    # React Router support - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;

        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";

        # Rate limiting for page requests
        limit_req zone=api burst=10 nodelay;
    }

    # Specific route handling for SPA
    location ~ ^/(dashboard|students|academic|financial|staff|settings|reports|analytics)(/.*)?$ {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup and config files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Optimize favicon requests
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Block common attack patterns
    location ~* (wp-admin|wp-content|wp-includes|xmlrpc\.php) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    # Security configurations
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }

    # Enable server-side includes if needed
    # ssi on;
}